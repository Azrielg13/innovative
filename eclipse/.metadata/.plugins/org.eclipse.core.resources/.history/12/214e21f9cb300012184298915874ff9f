package com.sce.esp.object.model;

import java.sql.SQLException;

import javax.persistence.Entity;
import javax.persistence.NamedNativeQueries;
import javax.persistence.NamedNativeQuery;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

import com.sce.esp.object.dao.TestUserDAO;
@Entity
@Table(schema="MDI",name="MDI993_TEST_USER")
@NamedQueries({
	@NamedQuery(name = "findByID", query="SELECT o FROM TestUser o WHERE o.SCRIPT_ID=?1 AND o.USERNAME_ID=?2"),//AUTO-GENERATED
	@NamedQuery(name = "findAll", query="SELECT o FROM TestUser o"),//AUTO-GENERATED
	@NamedQuery(name = "findAllActive", query="SELECT o FROM TestUser o WHERE o.DELETED_TS IS NULL"),//AUTO-GENERATED
	@NamedQuery(name = "findByTestScript", query="SELECT o FROM TestUser o WHERE o.SCRIPT_ID=?1 AND o.DELETED_TS IS NULL"),//AUTO-GENERATED
})
@NamedNativeQueries({
	@NamedNativeQuery(name = "refresh", query="SELECT o.* FROM MDI993_TEST_USER o WHERE o.SCRIPT_ID=? AND o.USERNAME_ID=?"),//AUTO-GENERATED
})
public class TestUser extends TestUserDAO{

	public TestUser(){
	}
	public TestUser(int scriptId, int usernameId){
		super(scriptId,usernameId);
	}

	public TestUser(TestUser testUser) {
		super(testUser);
	}

	/**
	 * To string.
	 * 
	 * @return the string
	 */
	public String toString(){
		try {
			return getUser().toString();
		} catch (SQLException e) {			
			e.printStackTrace();
		}
		return ""+getUsernameId();
	}
	public int getPlanyear(){
    	return Department.getActivePlanYear();
    }
}

