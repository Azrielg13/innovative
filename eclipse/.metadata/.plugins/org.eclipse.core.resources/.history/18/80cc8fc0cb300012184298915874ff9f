package com.sce.esp.component;

import java.util.Calendar;
import java.util.Vector;

import javax.swing.SwingUtilities;
import javax.swing.tree.TreeNode;

import com.sce.esp.log.EspLogger;
import com.sce.esp.object.model.SceProj;
import com.sce.esp.object.model.SceProjRev;
import com.sce.esp.object.model.Simulation;
import com.sce.esp.object.model.Sys;

/**
 * 
 * @author Distribution Staff Engineering
 *
 */
public class SimTreeNode extends ComparableTreeNode{

	private boolean leaf=false;
	private Simulation sim;
	private Sys sys;
	private Vector<ComparableTreeNode> children;

	public SimTreeNode(Simulation sim, Sys sys){
		super(sim);
		this.sim = sim;
		this.sys = sys;	
	}
	public boolean isLeaf(){
		return leaf;
	}
	public int getChildCount(){
		if(children != null)
			return children.size();
		children = new Vector<ComparableTreeNode>();
		SwingUtilities.invokeLater(new Runnable(){
			public void run() {
				try {
//					if(MainForm.isMainFormInit())
//						MainForm.getInstance().set_busy_cursor();
					
					for(SceProj proj : sys.getSceProjs(sim.getSimId())){
						//EspLogger.debug(this, "Adding sim: "+sim+" "+proj);
						SceProjRev	simRev = proj.getCurRev((Calendar)null, -1, sim);
						if( simRev != null){ 
							if(simRev.getSimId() != 0){
									EspLogger.debug(this, "sim: "+sim.getSimId()+" vs rev sim:"+simRev.getSimId());
									add(new ComparableTreeNode(proj.getCurRev((Calendar)null, -1, sim)));
							}
						}
					}
				} catch(Exception e){
					e.printStackTrace();
				}finally {
//					if(MainForm.isMainFormInit())
//						MainForm.getInstance().set_normal_cursor();
				}
			}
		});


		if(children.size() == 0)
			leaf=true;
		return children.size();
	}

	public TreeNode getChildAt(int index){
		return children.get(index);
	}
	public void add(ComparableTreeNode ptn){
		children.add(ptn);
	}
}