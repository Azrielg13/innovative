/**
 *           | Master Data Interface Version 2.0 |                       
 * 
 * Copyright (c) 2006, Southern California Edison, Inc.
 * 					   Distribution Staff Engineering Team. 					  
 * 	                   All rights reserved.
 * 
 * This software has been developed exclusively for internal usage.
 * Unauthorized use is prohibited.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 */
package com.sce.esp.object.model;

import java.io.Serializable;
import java.sql.SQLException;

import javax.persistence.Entity;
import javax.persistence.NamedNativeQueries;
import javax.persistence.NamedNativeQuery;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

import com.sce.esp.object.dao.SubContTransDAO;
@Entity
@Table(schema="MDI",name="MDI340_SUB_CONT_TRANS")
@NamedQueries({
	@NamedQuery(name = "findByID", query="SELECT o FROM SubContTrans o WHERE o.PLANYEAR=?1 AND o.TRANS_ID=?2"),//AUTO-GENERATED
	@NamedQuery(name = "findAll", query="SELECT o FROM SubContTrans o"),//AUTO-GENERATED
	@NamedQuery(name = "findAllActive", query="SELECT o FROM SubContTrans o WHERE o.DELETED_TS IS NULL"),//AUTO-GENERATED
	@NamedQuery(name = "findBySubCont", query="SELECT o FROM SubContTrans o WHERE o.PLANYEAR=?1 AND o.SUB_ID=?2 AND o.DELETED_TS IS NULL"),//AUTO-GENERATED
})
@NamedNativeQueries({
	@NamedNativeQuery(name = "refresh", query="SELECT o.* FROM MDI340_SUB_CONT_TRANS o WHERE o.PLANYEAR=? AND o.TRANS_ID=?"),//AUTO-GENERATED
})
public class SubContTrans extends SubContTransDAO implements Comparable<Object>, Serializable{
	
	private static final long serialVersionUID = 9017464417514244226L;

	/**
	 * The Constructor.
	 * 
	 * @param planyear the planyear
	 */
	public SubContTrans(){
	}
	public SubContTrans(int planyear) {
		super(planyear, 0);
	}
	
	/**
	 * The Constructor.
	 * 
	 * @param transId the trans id
	 * @param planyear the planyear
	 */
	public SubContTrans(int planyear, int transId){
		super(planyear,transId);
	}
	
	public SubContTrans(SubContTrans subContTrans) {
		super(subContTrans);
	}

	public Ckt getFromCkt()throws SQLException{
		return Ckt.getInstance(getPlanyear(),getFromCktId());
	}
	public void setFromCkt(Ckt ckt)throws SQLException{
		if(ckt==null)
			setFromCktId(0);
		else
			setFromCktId(ckt.getCktId());
	}
	public Ckt getToCkt()throws SQLException{
		return Ckt.getInstance(getPlanyear(),getToCktId());
	}
	public void setToCkt(Ckt ckt)throws SQLException{
		if(ckt==null)
			setToCktId(0);
		else
			setToCktId(ckt.getCktId());
	}
	public CktSwt getCCktSwt()throws SQLException{
		return CktSwt.getInstance(getPlanyear(),getCswtTypeId());
	}
	public void setCCktSwt(CktSwt cktSwt)throws SQLException{
		if(cktSwt==null)
			setCswtTypeId(0);
		else
			setCswtTypeId(cktSwt.getSwtTypeId());
	}
	public CktSwt getOCktSwt()throws SQLException{
		return CktSwt.getInstance(getPlanyear(),getOswtTypeId());
	}
	public void setOCktSwt(CktSwt cktSwt)throws SQLException{
		if(cktSwt==null)
			setOswtTypeId(0);
		else
			setOswtTypeId(cktSwt.getSwtTypeId());
	}
	public Cont getCont()throws SQLException{
		return Cont.getInstance(getPlanyear(),getContId());
	}
	public void setCont(Cont cont)throws SQLException{
		if(cont==null)
			setContId(0);
		else
			setContId(cont.getContId());
	}

	public Sub getSub() throws SQLException {
		return Sub.getInstance(getPlanyear(), getSubId());
	}
	
	/* (non-Javadoc)
	 * @see java.lang.Comparable#compareTo(java.lang.Object)
	 */
	public int compareTo(Object o) {
		SubContTrans usc = (SubContTrans)o;
		
		try{
		if(getCont().getContCode()<usc.getCont().getContCode())
			return -1;
		if(getCont().getContCode()>usc.getCont().getContCode())
			return 1;
		}catch(SQLException e){
			//continue
		}
		
		if(getStep()<usc.getStep())
			return -1;
		if(getStep()>usc.getStep())
			return 1;
		
		return super.compareTo(o);
	}
}
