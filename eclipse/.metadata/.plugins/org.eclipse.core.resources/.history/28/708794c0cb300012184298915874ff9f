/*
 * Copyright (c) 2002-2010 ESP Suite. All Rights Reserved.
 *
 *     
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, 
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; 
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE 
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, 
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 * 
 * Authors: Technology Integration Group, SCE
 * Developers: Eddie Mayfield, Frank Gonzales, Augustin Muniz,
 * Kate Suwan, Hiro Kushida, Andrew McNaughton, Brian Stonerock,
 * Russell Ragsdale, Patrick Ridge, Everett Aragon.
 * 
 */
package com.sce.esp.component;
import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.UIManager;

import com.sce.esp.util.ESPFont;

/**
 * <p>
 * MDICellRendererPanel:</br> Creates an MDI Cell Renderer Panel.
 * </p>
 * 
 * @author Distribution Staff Engineering
 * @version 2.0
 */
public class ESPCellRendererPanel extends JPanel {

	/**
	 * 
	 */
	private static final long serialVersionUID = 6396078741308507525L;
	/** The _label. */
	private JLabel _label;

	/**
	 * The Constructor.
	 */
	public ESPCellRendererPanel() {
		setLayout(new BoxLayout(this, BoxLayout.X_AXIS));
		setBorder(BorderFactory.createEmptyBorder());
		setOpaque(false);
	}

	/**
	 * Sets the label.
	 * 
	 * @param label
	 *            the label
	 */
	public void setLabel(JLabel label) {
		_label = label;
		add(_label);
	}

	/**
	 * Set the font using MDIFont.
	 * 
	 * @param font
	 *            - the MDIFont
	 */
	public void setFont(ESPFont font) {
		super.setFont(font);
		if (_label != null) {
			_label.setFont(font);
		}
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see javax.swing.JComponent#updateUI()
	 */
	/**
	 * Update UI.
	 */
	public void updateUI() {
		super.updateUI();
		setOpaque(false);
		setFont(UIManager.getFont("Label.font"));
		setBackground(UIManager.getColor("Label.background"));
		setForeground(UIManager.getColor("Label.foreground"));
	}
}
