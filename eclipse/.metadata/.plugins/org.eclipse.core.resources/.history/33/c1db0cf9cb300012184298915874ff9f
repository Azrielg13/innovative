package com.sce.esp.object.model;

import java.sql.SQLException;
import java.util.Calendar;

import com.sce.esp.object.dao.DataAccessObject;

public abstract class AbstractRelation extends DataAccessObject{
	public static final int FINISH_TO_START=1;
	public static final int START_TO_START=2;
	public static final int FINISH_TO_FINISH=3;
    public static final int START_TO_FINISH=4;
	public AbstractRelation() {}
	public AbstractRelation(AbstractRelation orig) {
		super(orig);
	}
	public abstract int getRelationType();
	public abstract void setRelationType(int relationType) throws SQLException;
	public Calendar getStartDate() throws SQLException {
		switch(getRelationType()){
			case FINISH_TO_START: return getPredTask().getEndDate();
			case FINISH_TO_FINISH:{Calendar cal=(Calendar)getPredTask().getEndDate().clone(); cal.add(Calendar.DATE, (int)-getPredTask().getEstDuration()); return cal;}
            case START_TO_START: return getPredTask().getStartDate();
            case START_TO_FINISH:{Calendar cal=(Calendar)getPredTask().getStartDate().clone(); cal.add(Calendar.DATE, (int)-getPredTask().getEstDuration()); return cal;}
		}
		return null;
	}
	public abstract AbstractTask<?> getPredTask() throws SQLException;
	public abstract AbstractTask<?> getSuccTask() throws SQLException;
	public Calendar getLateFinish() throws SQLException {
		switch(getRelationType()){
			case FINISH_TO_START: return getPredTask().getLateStart();
			case FINISH_TO_FINISH: return getPredTask().getLateFinish();
            case START_TO_START: {Calendar cal=(Calendar)getPredTask().getLateStart().clone(); cal.add(Calendar.DATE, (int)-getSuccTask().getDuration()); return cal;}
            case START_TO_FINISH:{Calendar cal=(Calendar)getPredTask().getLateFinish().clone(); cal.add(Calendar.DATE, (int)-getSuccTask().getDuration()); return cal;}
		}
		return null;
	}
}
