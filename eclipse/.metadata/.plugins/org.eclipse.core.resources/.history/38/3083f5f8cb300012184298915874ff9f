package com.sce.esp.object.model;

import java.io.Serializable;
import java.sql.SQLException;
import java.util.Collection;

import javax.persistence.Entity;
import javax.persistence.NamedNativeQueries;
import javax.persistence.NamedNativeQuery;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

import com.sce.esp.object.dao.CostStageDAO;
@Entity
@Table(schema="MDI",name="MDIS75_COST_STAGE")
@NamedQueries({
	@NamedQuery(name = "findByID", query="SELECT o FROM CostStage o WHERE o.COST_STAGE_ID=?1"),//AUTO-GENERATED
	@NamedQuery(name = "findAll", query="SELECT o FROM CostStage o"),//AUTO-GENERATED
	@NamedQuery(name = "findAllActive", query="SELECT o FROM CostStage o WHERE o.DELETED_TS IS NULL"),//AUTO-GENERATED
})
@NamedNativeQueries({
	@NamedNativeQuery(name = "refresh", query="SELECT o.* FROM MDIS75_COST_STAGE o WHERE o.COST_STAGE_ID=?"),//AUTO-GENERATED
})
public class CostStage extends CostStageDAO implements Serializable{
	/**
	 * 
	 */
	private static final long serialVersionUID = -4243555508753090584L;
	public static final int APPROVED = 1;
	public static final int PLAN_EST = 2;
	public static final int BUDGET = 6;
	public static final int FORECAST = 7;
	 
	
	public static enum Type{None,Proposed,Approved,Budget,Forecast}
	
	public CostStage() {
		super(0);
	}
	public CostStage(int costStageId) {
		super(costStageId);
	}
	public CostStage(CostStage orig) {
		super(orig);
	}
	public CostStage(String name) throws SQLException {
		super(0);
		setName(name);
	}
	public double getOrder(){
		return getAltDouble1();
	}
	public int compareTo(Object o){
		if(o instanceof CostStage){
			CostStage cs = (CostStage)o;
			if(getOrder() < cs.getOrder())
				return -1;
			if(getOrder() > cs.getOrder())
				return 1;
		}
		return super.compareTo(o);
	}
	public String toString(){
		return getName();
	}
	public static Collection<CostStage> getCostStages(Type costType) throws SQLException{
		return getCollection(new String[]{"COST_TYPE","DELETED_TS"},costType.ordinal(),null);
	}
	public boolean isBudgetCost() {
		return getCostType()==Type.Budget.ordinal();
	}
}
