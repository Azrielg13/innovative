/*
 * Copyright (c) 2002-2010 ESP Suite. All Rights Reserved.
 *
 *     
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, 
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; 
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE 
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, 
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 * 
 * Authors: Technology Integration Group, SCE
 * Developers: Eddie Mayfield, Frank Gonzales, Augustin Muniz,
 * Kate Suwan, Hiro Kushida, Andrew McNaughton, Brian Stonerock,
 * Russell Ragsdale, Patrick Ridge, Everett Aragon.
 * 
 */
package com.sce.esp.hst;

/**
 * <p>Title: Effect</p>
 * <p>Description: Neural Network Inputs Effects</p>
 * 
 * @author Distribution Staff Engineering
 * @version 2.0
 */
public class Effect {

	//Effects  Defaults
	private boolean max0 = true;
	private boolean min0max1 = true;
	private boolean min1max2 = true;
	private boolean min1max2min2 = true;
	
	private boolean min0 = false;
	private boolean max1 = false;
	private boolean min1 = false;
	private boolean max2 = false;
	private boolean min2 = false;

	//Effects 
	boolean weekdayEffect=true;
	boolean hourEffect=true;	
	boolean tempratureEffect=true;
	boolean windEffect=true;
	boolean monthEffect=true;
	boolean weekendEffect=true;

	//Network Paramaters
	double rate          = 0.8;
	double alpha         = 0.1;
	double sample        = 1.;
	int    epochs        = 5000;
	int    nodes         = 10;
	int    type          = 0;
	private boolean season;
	private boolean holiday;

	//Constructor
	public Effect(){
	}

	public void setWeekdayEffect(boolean effect){	weekdayEffect=effect;	}
	public boolean getWeekdayEffect()			{	return weekdayEffect;	}
	
	public void setWeekendEffect(boolean effect){	weekendEffect=effect;	}
	public boolean getWeekendEffect()			{	return weekendEffect;	}

	public void setHourEffect(boolean effect)	{	hourEffect=effect;	}
	public boolean getHourEffect()				{	return hourEffect;	}

	public void setMonthEffect(boolean effect)	{	monthEffect=effect;	}
	public boolean getMonthEffect()				{	return monthEffect;	}

	public void setTempratureEffect(boolean effect){tempratureEffect=effect;	}
	public boolean getTempratureEffect()		{	return tempratureEffect;	}

	public void setWindEffect(boolean effect)	{	windEffect=effect;	}
	public boolean getWindEffect()				{	return windEffect;	}


	public double getRate()         {return rate;}
	public void setRate(double value){ rate=value;}
	
	public double getAlpha(){return alpha;	}	
	public void setAlpha (double value){ alpha=value;}

	public double getSample() {return sample;}        
	public void setSample(double value){ sample=value;}

	public int    getEpochs(){ return epochs;}       
	public void setEpochs(int value){ epochs=value;}

	public int    getNodes(){ return nodes;}
	public void setNodes(int value){ nodes=value;}

	public int    getType() { return type;}         
	public void setType(int value){ type=value;}


	
	public boolean isHoliday() {
		return holiday;
	}
	public void setHoliday(boolean value){ holiday=value;}

	public boolean isSeason() {
		return season;
	}
	public void setSeason(boolean value){ season=value;}

	public boolean isMax0() {
		return max0;
	}
	public void setMax0(boolean value){ max0=value;}

	public boolean isMin0Max1() {
		return min0max1;
	}
	public void setMin0Max1(boolean value){ min0max1=value;}

	public boolean isMin1Max2() {
		return min1max2;
	}
	public void setMin1Max2(boolean value){ min1max2=value;}

	public boolean isMin1Max2Min2() {
		return min1max2min2;
	}
	public void setMin1Max2Min2(boolean value){ min1max2min2=value;}

	public boolean isMin0() {
		return min0;
	}
	public void setMin0(boolean value){ min0=value;}

	public boolean isMax1() {
		return max1;
	}
	public void setMax1(boolean value){ max1=value;}

	public boolean isMin1() {
		return min1;
	}
	public void setMin1(boolean value){ min1=value;}

	public boolean isMax2() {
		return max2;
	}
	public void setMax2(boolean value){ max2=value;}

	public boolean isMin2() {
		return min2;
	}
	public void setMin2(boolean value){ min2=value;}
}