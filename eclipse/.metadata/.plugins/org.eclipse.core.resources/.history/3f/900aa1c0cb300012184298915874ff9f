package com.sce.esp.component;

import java.awt.Cursor;
import java.util.Vector;

import javax.swing.tree.TreeNode;

import com.sce.esp.object.model.DuctBank;
import com.sce.esp.util.ESPProperties;

/**
 * 
 * @author Distribution Staff Engineering
 *
 */
public class DbTreeNode extends ComparableTreeNode {

	private DuctBank db;
	private Vector<ComparableTreeNode> children;
	  
	public DbTreeNode(DuctBank db){
		super(db);
		this.db = db;
	}
			    
	public boolean isLeaf(){
		return (getChildCount()==0);
	}
	public int getChildCount(){
		if(children != null)
			return children.size();
		int cc=0;
		try{
//				MainForm.getInstance().setCursor(new Cursor(Cursor.WAIT_CURSOR));
			cc = db.getDbCols() * db.getDbRows();
		}
		catch(Exception e){
			e.printStackTrace();
		}
		finally{
//			if(MainForm.isMainFormInit())
//				MainForm.getInstance().setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
		}
		return cc;
	}
	public TreeNode getChildAt(int index){
		if(children == null){
			children = new Vector<ComparableTreeNode>();			
			try{//Add Ducts
				for(int i=0;  i<db.getDbRows(); i++)
					for(int j=0; j<db.getDbCols(); j++)				
						add(new ComparableTreeNode(db.getDuctAt(i+1, j+1)));
			}
			catch(Exception e){
				e.printStackTrace();
			}
		}
		return children.get(index);
	}
	public void add(ComparableTreeNode ctn){
		children.add(ctn);
	}
}