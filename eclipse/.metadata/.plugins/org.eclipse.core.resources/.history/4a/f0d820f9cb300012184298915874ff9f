package com.sce.esp.object.model;
import java.sql.SQLException;

import com.sce.esp.object.dao.TaskRelationDAO;
import javax.persistence.Entity;
import javax.persistence.NamedNativeQueries;
import javax.persistence.NamedNativeQuery;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
@Entity
@Table(schema="MDI",name="MDIT05_TASK_RELATION")
@NamedQueries({
	@NamedQuery(name = "findByID", query="SELECT o FROM TaskRelation o WHERE o.TASK_ID=?1 AND o.PRED_TASK_ID=?2"),//AUTO-GENERATED
	@NamedQuery(name = "findAll", query="SELECT o FROM TaskRelation o"),//AUTO-GENERATED
	@NamedQuery(name = "findAllActive", query="SELECT o FROM TaskRelation o WHERE o.DELETED_TS IS NULL"),//AUTO-GENERATED
	@NamedQuery(name = "findBySuccTask", query="SELECT o FROM TaskRelation o WHERE o.TASK_ID=?1 AND o.DELETED_TS IS NULL"),//AUTO-GENERATED
	@NamedQuery(name = "findByPredTask", query="SELECT o FROM TaskRelation o WHERE o.PRED_TASK_ID=?1 AND o.DELETED_TS IS NULL"),//AUTO-GENERATED
})
@NamedNativeQueries({
	@NamedNativeQuery(name = "refresh", query="SELECT o.* FROM MDIT05_TASK_RELATION o WHERE o.TASK_ID=? AND o.PRED_TASK_ID=?"),//AUTO-GENERATED
})
public class TaskRelation extends TaskRelationDAO{
	public TaskRelation(){
	}
	public TaskRelation(int taskId, int predTaskId){
		super(taskId, predTaskId);
	}
	public TaskRelation(TaskRelation orig){
		super(orig);
	}
	public TaskRelation(int taskId, int predTaskId, int relation) throws SQLException {
		super(taskId,predTaskId);
		setRelationType(relation);
	}
}
