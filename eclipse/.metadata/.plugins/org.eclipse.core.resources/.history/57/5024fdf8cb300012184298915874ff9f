package com.sce.esp.object.model;
import java.sql.SQLException;

import com.sce.esp.object.dao.SceProjMitigationDAO;
import javax.persistence.Entity;
import javax.persistence.NamedNativeQueries;
import javax.persistence.NamedNativeQuery;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
@Entity
@Table(schema="MDI",name="MDIV30_SCE_PROJ_MITIGATION")
@NamedQueries({
	@NamedQuery(name = "findByID", query="SELECT o FROM SceProjMitigation o WHERE o.SCE_PROJ_MITIGATION_ID=?1"),//AUTO-GENERATED
	@NamedQuery(name = "findAll", query="SELECT o FROM SceProjMitigation o"),//AUTO-GENERATED
	@NamedQuery(name = "findAllActive", query="SELECT o FROM SceProjMitigation o WHERE o.DELETED_TS IS NULL"),//AUTO-GENERATED
	@NamedQuery(name = "findBySceProjRev", query="SELECT o FROM SceProjMitigation o WHERE o.SCE_PROJ_REV_ID=?1 AND o.DELETED_TS IS NULL"),//AUTO-GENERATED
})
@NamedNativeQueries({
	@NamedNativeQuery(name = "refresh", query="SELECT o.* FROM MDIV30_SCE_PROJ_MITIGATION o WHERE o.SCE_PROJ_MITIGATION_ID=?"),//AUTO-GENERATED
})
public class SceProjMitigation extends SceProjMitigationDAO{
	public SceProjMitigation(){
	}
	public SceProjMitigation(int sceProjMitigationId){
		super(sceProjMitigationId);
	}
	public SceProjMitigation(SceProjMitigation orig){
		super(orig);
	}
	
	public String getMitigationNotes(){
		return getAltVarchar1();
	}
	public void setMitigationNotes(String notes){
		try {
			setAltVarchar1(notes);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	public boolean hasLink() throws SQLException{
		return this.getSceProj()!=null || this.getCritExcept()!=null || this.getSwtProc()!=null;
	}
}
