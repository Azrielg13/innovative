/**
 *           | Master Data Interface Version 2.0 |                       
 * 
 * Copyright (c) 2006, Southern California Edison, Inc.
 * 					   Distribution Staff Engineering Team. 					  
 * 	                   All rights reserved.
 * 
 * This software has been developed exclusively for internal usage.
 * Unauthorized use is prohibited.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 */
package com.sce.esp.object.model;

import java.sql.SQLException;
import java.util.Calendar;


/**
 * The MonthlyPeak interface imposes guidelines for objects that represent that maximum 
 * DailyPeak within a month.
 * 
 * @author Distribution Staff Engineering
 * @version 2.0
 */
public interface MonthlyPeak extends AbstractMonthlyPeak {
	
	/**
	 * Sets the peak date.
	 * 
	 * @param date the date
	 * 
	 * @throws SQLException the SQL exception
	 */
	public void setPeakDate(Calendar date) throws SQLException;
	
	/**
	 * Delete.
	 * 
	 * @return true, if delete
	 * 
	 * @throws SQLException the SQL exception
	 */
	public void delete() throws SQLException;
	
	/**
	 * Refresh.
	 * 
	 * @return true, if refresh
	 * 
	 * @throws SQLException the SQL exception
	 */
	public void refresh() throws SQLException;
	
	/**
	 * Gets the daily peak.
	 * 
	 * @return the daily peak
	 * 
	 * @throws SQLException the SQL exception
	 */
	public DailyPeak getDailyPeak()throws SQLException;
	
	/**
	 * Sets the peak value.
	 * 
	 * @param peak the peak
	 * @param planyear the planyear
	 * 
	 * @throws SQLException the SQL exception
	 */
	public void setPeakValue(double peak)throws SQLException;
	
	/**
	 * Checks if is user spec.
	 * 
	 * @return true, if is user spec
	 */
	public boolean isUserSpec();	
	
	/**
	 * Gets the max daily peak.
	 * 
	 * @return the max daily peak
	 * 
	 * @throws SQLException the SQL exception
	 */
	public DailyPeak getMaxDailyPeak()throws SQLException;	
	
	
	
}
