package com.sce.esp.dialog;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.GradientPaint;
import java.awt.GridLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.BorderFactory;
import javax.swing.Icon;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JPanel;

import com.jidesoft.alert.Alert;
import com.jidesoft.animation.CustomAnimation;
import com.jidesoft.swing.JideButton;
import com.jidesoft.swing.JideSwingUtilities;
import com.jidesoft.swing.PaintPanel;
import com.jidesoft.utils.PortingUtils;
import com.sce.esp.util.IconsFactory;

/**
 * 
 * @author Distribution Staff Engineering
 */
public class SynchDialog {	

	public static void showSynch(Component owner){
		final Alert alert = new Alert();
		alert.getContentPane().setLayout(new BorderLayout());
		alert.getContentPane().add(createAlert(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				alert.hidePopupImmediately();
			}
		}));

		alert.setOwner(owner);
		alert.setResizable(true);
		alert.setMovable(true);
		alert.setTimeout(2000);
		alert.setTransient(true);
		alert.setAlwaysOnTop(false);
		alert.setPopupBorder(BorderFactory.createLineBorder(new Color(10, 30, 106)));

		CustomAnimation showAnimation = new CustomAnimation( 
				CustomAnimation.TYPE_ENTRANCE, 
				CustomAnimation.EFFECT_FADE, 
				CustomAnimation.SMOOTHNESS_MEDIUM, 
				CustomAnimation.SPEED_MEDIUM); 
		CustomAnimation hideAnimation = new CustomAnimation( 
				CustomAnimation.TYPE_EXIT, 
				CustomAnimation.EFFECT_FADE, 
				CustomAnimation.SMOOTHNESS_MEDIUM, 
				CustomAnimation.SPEED_MEDIUM); 
		showAnimation.setVisibleBounds(PortingUtils.getLocalScreenBounds());
		alert.setShowAnimation(showAnimation);

		hideAnimation.setVisibleBounds(PortingUtils.getLocalScreenBounds());
		alert.setHideAnimation(hideAnimation);       

		alert.setFocusable(false);
		alert.setRequestFocusEnabled(false);		
//		alert.showPopup(SwingConstants.SOUTH_EAST); //BME 2.4.8 Error 
	}

	public static JComponent createAlert(ActionListener closeAction) {
		JPanel bottomPanel = new JPanel(new GridLayout(1, 2, 0, 0));
		JPanel leftPanel = new JPanel(new BorderLayout(6, 6));
		// leftPanel.add(new JLabel(IconsFactory.getImageIcon(AlertDemo.class, "icons/mail.png")));
		leftPanel.add(bottomPanel, BorderLayout.AFTER_LAST_LINE);
		JPanel rightPanel = new JPanel(new GridLayout(1, 2, 0, 0));
		//rightPanel.add(createButton(IconsFactory.getImageIcon(AlertDemo.class, "icons/option.png")));
		JideButton closeButton = createButton(IconsFactory.getImageIcon("icons/close.png"));
		closeButton.addActionListener(closeAction);
		rightPanel.add(closeButton);

		final String text = "<HTML><B>Data Synchronizer</B><BR><BR><FONT COLOR=BLUE>Data has been synchronzied with other users...<B><BR>";
		final JLabel message = new JLabel(text);

		PaintPanel panel = new PaintPanel(new BorderLayout(6, 6));
		panel.setBorder(BorderFactory.createEmptyBorder(6, 7, 7, 7));
		panel.add(message, BorderLayout.CENTER);
		JPanel topPanel = JideSwingUtilities.createTopPanel(rightPanel);
		panel.add(topPanel, BorderLayout.AFTER_LINE_ENDS);
		panel.add(leftPanel, BorderLayout.BEFORE_LINE_BEGINS);
		for (int i = 0; i < panel.getComponentCount(); i++) {
			JideSwingUtilities.setOpaqueRecursively(panel.getComponent(i), false);
		}
		panel.setOpaque(true);
		panel.setBackgroundPaint(new GradientPaint(0, 0, new Color(231, 229, 224), 0, panel.getPreferredSize().height, new Color(212, 208, 200)));
		return panel;
	}

	protected static JideButton createButton(Icon icon) {
		JideButton button = new JideButton(icon);
		button.setMargin(new Insets(0, 0, 0, 0));
		return button;
	}
}