package com.sce.esp.object.model;

import java.io.Serializable;
import java.sql.SQLException;

import javax.persistence.Entity;
import javax.persistence.NamedNativeQueries;
import javax.persistence.NamedNativeQuery;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

import com.sce.esp.object.dao.SimCktDAO;
import com.sce.esp.object.jpa.AutoInsertable;
@Entity
@AutoInsertable
@Table(schema="MDI",name="MDI225_SIM_CKT")
@NamedQueries({
	@NamedQuery(name = "findByID", query="SELECT o FROM SimCkt o WHERE o.PLANYEAR=?1 AND o.SIM_ID=?2 AND o.CKT_ID=?3"),//AUTO-GENERATED
	@NamedQuery(name = "findAll", query="SELECT o FROM SimCkt o"),//AUTO-GENERATED
	@NamedQuery(name = "findAllActive", query="SELECT o FROM SimCkt o WHERE o.DELETED_TS IS NULL"),//AUTO-GENERATED
	@NamedQuery(name = "findByProj", query="SELECT o FROM SimCkt o WHERE o.PLANYEAR=?1 AND o.SIM_ID=?2 AND o.IN_SERVICE_PROJ_ID=?3 AND o.DELETED_TS IS NULL"),//AUTO-GENERATED
	@NamedQuery(name = "findByProj2", query="SELECT o FROM SimCkt o WHERE o.PLANYEAR=?1 AND o.SIM_ID=?2 AND o.OUT_SERVICE_PROJ_ID=?3 AND o.DELETED_TS IS NULL"),//AUTO-GENERATED
})
@NamedNativeQueries({
	@NamedNativeQuery(name = "refresh", query="SELECT o.* FROM MDI225_SIM_CKT o WHERE o.PLANYEAR=? AND o.SIM_ID=? AND o.CKT_ID=?"),//AUTO-GENERATED
})
public class SimCkt extends SimCktDAO implements Serializable{

	private static final long serialVersionUID = 7124619404421034664L;
	
	public SimCkt(){
	}
	public SimCkt(int planyear, int simId, int cktId) {
		super(planyear, simId, cktId);
	}
	public SimCkt(SimCkt simCkt) {
		super(simCkt);
	}
	public Bbank getBbank() throws SQLException{
		if(getInServiceProj() != null)
			return (Bbank)getInServiceProj().getSub();
		return null;
	}
	public Proj getInServiceProj() throws SQLException{
		return Proj.getInstance(getPlanyear(), getSimId(), getInServiceProjId());
	}
	public Proj getOutServiceProj() throws SQLException {
		return Proj.getInstance(getPlanyear(), getSimId(), getOutServiceProjId());
	}
	public String toString(){
		try {
			return getCkt()+" - "+getSimId();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return getHashKey();
	}
	
	
	
	
	
	
}
