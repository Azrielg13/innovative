/*
 * Copyright (c) 2002-2010 ESP Suite. All Rights Reserved.
 *
 *     
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, 
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; 
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE 
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, 
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 * 
 * Authors: Technology Integration Group, SCE
 * Developers: Eddie Mayfield, Frank Gonzales, Augustin Muniz,
 * Kate Suwan, Hiro Kushida, Andrew McNaughton, Brian Stonerock,
 * Russell Ragsdale, Patrick Ridge, Everett Aragon.
 * 
 */
package com.sce.esp.component;

import com.jidesoft.grid.PropertyTable;
import com.jidesoft.grid.PropertyTableModel;
import com.sce.esp.object.model.Department;
import com.sce.esp.object.model.User;

public class ESPPropertyTable extends PropertyTable {
	/**
	 * 
	 */
	private static final long serialVersionUID = 4676859085670002389L;
	private int planyear;
	public ESPPropertyTable(int planyear) {
		this(planyear, null);
	}
	public ESPPropertyTable(int planyear, PropertyTableModel model) {
		super(model);
		this.planyear = planyear;

		// setCellEditorManagerEnabled(false);
		// setCellRendererManagerEnabled(false);

		putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);
	}
	public boolean isCellEditable(int row, int col) {
		try {
			if (!User.getActiveUser().getUserRole().isMDIUser()
					|| planyear != Department.getActivePlanYear()
					|| User.getActiveUser().isReadOnly())
				return false;
		} catch (Exception e) {
			e.printStackTrace();
		}
		return super.isCellEditable(row, col);
	}
}
