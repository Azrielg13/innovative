package com.sce.esp.object.model;
import com.sce.esp.object.dao.ScopeItemForecastDAO;
import javax.persistence.Entity;
import javax.persistence.NamedNativeQueries;
import javax.persistence.NamedNativeQuery;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
@Entity
@Table(schema="MDI",name="MDIU33_SCOPE_ITEM_FORECAST")
@NamedQueries({
	@NamedQuery(name = "findByID", query="SELECT o FROM ScopeItemForecast o WHERE o.SCOPE_ITEM_ID=?1 AND o.COST_TYPE_ID=?2 AND o.YEAR=?3"),//AUTO-GENERATED
	@NamedQuery(name = "findAll", query="SELECT o FROM ScopeItemForecast o"),//AUTO-GENERATED
	@NamedQuery(name = "findAllActive", query="SELECT o FROM ScopeItemForecast o WHERE o.DELETED_TS IS NULL"),//AUTO-GENERATED
	@NamedQuery(name = "findByScopeItem", query="SELECT o FROM ScopeItemForecast o WHERE o.SCOPE_ITEM_ID=?1 AND o.DELETED_TS IS NULL"),//AUTO-GENERATED
})
@NamedNativeQueries({
	@NamedNativeQuery(name = "refresh", query="SELECT o.* FROM MDIU33_SCOPE_ITEM_FORECAST o WHERE o.SCOPE_ITEM_ID=? AND o.COST_TYPE_ID=? AND o.YEAR=?"),//AUTO-GENERATED
})
public class ScopeItemForecast extends ScopeItemForecastDAO{
	public ScopeItemForecast(){
	}
	public ScopeItemForecast(int scopeItemId, int costTypeId, int year){
		super(scopeItemId, costTypeId, year);
	}
	public ScopeItemForecast(ScopeItemForecast orig){
		super(orig);
	}
}
