package com.sce.esp.object.model;

import java.sql.SQLException;
import java.util.Collection;

import com.sce.esp.object.ESPTestCase;

public class CktGrowthTimeTest extends ESPTestCase {
	private Abank abank;
//	public void setUp() throws Exception{
//		super.setUp();
//		abank = Abank.getInstance(2011, 340);
//	}
	public void runCode() throws SQLException{
		int year=abank.getPlanyear();
		for(int x=0; x<10; x++){
			AbankYear aby = abank.getYear(0, year++);
			assertNotSame(0.0,aby.getGrowthNoPRNHC());
			assertNotSame(0.0,aby.getGrowthNoPRNBC());
			assertNotSame(0.0,aby.getGrowthNoPRNLC());
		}
	}
//	public void testInitTime() throws SQLException{
//		runCode();
//	}
//	public void testRun2() throws SQLException{
//		runCode();
//	}
//	public void testRun3() throws SQLException{
//		runCode();
//	}
//	public void testRun4() throws SQLException{
//		runCode();
//	}
//	public void testRun5() throws SQLException{
//		runCode();
//	}
	public void testGrowthPtr() throws SQLException{
		Bbank bbank = Bbank.getInstance(2012, 1781); //Banning 115/33
		Collection<CktGrowth> cgs = bbank.getYear(0, 2021).getCktGrowths();
		assertTrue(cgs.size()>0);
		for(CktGrowth cg:cgs){
			assertTrue(cg.isNewInstance());
			if(cg.getGrowthTypeId()==GrowthType.BG)
				assertTrue(cg.getGrowthBC()!=0.0);
				
		}
	}
	public void testGrowthPtr2() throws SQLException{
		Bbank bbank = Bbank.getInstance(2012, 1781); //Banning 115/33
		Collection<CktGrowth> cgs = bbank.getYear(0, 2021).getCktGrowths();
		assertTrue(cgs.size()>0);
		for(CktGrowth cg:cgs){
			assertTrue(cg.isNewInstance());
			if(cg.getGrowthTypeId()==GrowthType.BG)
				assertTrue(cg.getGrowthBC()!=0.0);
				
		}
	}
}
