package com.sce.esp.object.model;

import java.awt.Color;
import java.io.Serializable;
import java.sql.SQLException;

import javax.persistence.Entity;
import javax.persistence.NamedNativeQueries;
import javax.persistence.NamedNativeQuery;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

import com.sce.esp.object.dao.PqEquInvDAO;
import com.sce.esp.util.Calculate;
@Entity
@Table(schema="MDI",name="MDI987_PQ_EQU_INV")
@NamedQueries({
	@NamedQuery(name = "findByID", query="SELECT o FROM PqEquInv o WHERE o.PLANYEAR=?1 AND o.TOOL_ID=?2"),//AUTO-GENERATED
	@NamedQuery(name = "findAll", query="SELECT o FROM PqEquInv o"),//AUTO-GENERATED
	@NamedQuery(name = "findAllActive", query="SELECT o FROM PqEquInv o WHERE o.DELETED_TS IS NULL"),//AUTO-GENERATED
	@NamedQuery(name = "findByPqEquipment", query="SELECT o FROM PqEquInv o WHERE o.EQUIP_ID=?1 AND o.DELETED_TS IS NULL"),//AUTO-GENERATED
})
@NamedNativeQueries({
	@NamedNativeQuery(name = "refresh", query="SELECT o.* FROM MDI987_PQ_EQU_INV o WHERE o.PLANYEAR=? AND o.TOOL_ID=?"),//AUTO-GENERATED
})
public class PqEquInv extends PqEquInvDAO implements Serializable{

	private static final long serialVersionUID = 4460991652525185190L;
	
	/**Calibration Due Date is Beyond the Last Calibration Date*/
	public static final Color OPEN_1_COLOR = Color.RED;
	/**Calibration Due Date is due within 30 days of the Calibration Date*/
	public static final Color OPEN_2_COLOR = Color.YELLOW.darker();
	/**Calibration Due Date is ok*/
	public static final Color OPEN_3_COLOR = Color.BLACK;

	public PqEquInv(){
	}
	public PqEquInv(int planyear, int toolId) {
		super(planyear, toolId);
	}

	public PqEquInv(PqEquInv pqToolInventory) {
		super(pqToolInventory);
	}

	public Color getStatusColor() {
		if(getCalibrationDueDate()!=null && getCalibrationDate()!=null){
			if	(getCalibrationDate().getTimeInMillis()>getCalibrationDueDate().getTimeInMillis())
				return OPEN_1_COLOR;
			
			else if(Calculate.getDaysDiff(getCalibrationDueDate(), getCalibrationDate())<=30){
				return OPEN_2_COLOR;				
			}
		}
		return OPEN_3_COLOR;
	}
	
	public String toString(){
		try {
			return ""+getPqEquipment()+"("+getQuantity()+")";
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return super.toString();
	}
}
