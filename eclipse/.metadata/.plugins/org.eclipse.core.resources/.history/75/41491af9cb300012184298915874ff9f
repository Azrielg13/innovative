/**
 *           | Master Data Interface Version 2.0 |                       
 * 
 * Copyright (c) 2006, Southern California Edison, Inc.
 * 					   Distribution Staff Engineering Team. 					  
 * 	                   All rights reserved.
 * 
 * This software has been developed exclusively for internal usage.
 * Unauthorized use is prohibited.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 */
package com.sce.esp.object.model;

import java.io.Serializable;

import javax.persistence.Entity;
import javax.persistence.NamedNativeQueries;
import javax.persistence.NamedNativeQuery;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

import com.sce.esp.object.dao.MvaFactorDAO;
@Entity
@Table(schema="MDI",name="MDI100_MVA_FACTOR")
@NamedQueries({
	@NamedQuery(name = "findByID", query="SELECT o FROM MvaFactor o WHERE o.PLANYEAR=?1 AND o.VOLTAGE_KV=?2"),//AUTO-GENERATED
	@NamedQuery(name = "findAll", query="SELECT o FROM MvaFactor o"),//AUTO-GENERATED
	@NamedQuery(name = "findAllActive", query="SELECT o FROM MvaFactor o WHERE o.DELETED_TS IS NULL"),//AUTO-GENERATED
	@NamedQuery(name = "findByDepartment", query="SELECT o FROM MvaFactor o WHERE o.PLANYEAR=?1 AND o.DELETED_TS IS NULL"),//AUTO-GENERATED
})
@NamedNativeQueries({
	@NamedNativeQuery(name = "refresh", query="SELECT o.* FROM MDI100_MVA_FACTOR o WHERE o.PLANYEAR=? AND o.VOLTAGE_KV=?"),//AUTO-GENERATED
})
public class MvaFactor extends MvaFactorDAO implements Serializable{

	private static final long serialVersionUID = -8225938734242174226L;

	public MvaFactor(){
	}
	public MvaFactor(int planyear) {
		super(planyear,0);
	}
	
	public MvaFactor(int planyear, double voltageKv){
		super(planyear,voltageKv);
	}

	public MvaFactor(MvaFactor mvaFactor) {
		super(mvaFactor);
	}
	@Override
	public int compareTo(Object o){
		
	    	if(o instanceof MvaFactor)
	    	{if(this.getVoltageKv() < ((MvaFactor)o).getVoltageKv())
	    		return -1;
	    	if(this.getVoltageKv() > ((MvaFactor)o).getVoltageKv())
	    		return 1;
	    	}
	    	return super.compareTo(o);
	    }
}
