/*
 * Copyright (c) 2002-2010 ESP Suite. All Rights Reserved.
 *
 *     
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, 
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; 
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE 
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, 
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 * 
 * Authors: Technology Integration Group, SCE
 * Developers: Eddie Mayfield, Frank Gonzales, Augustin Muniz,
 * Kate Suwan, Hiro Kushida, Andrew McNaughton, Brian Stonerock,
 * Russell Ragsdale, Patrick Ridge, Everett Aragon.
 * 
 */
package com.sce.esp.component;

import java.awt.Component;

import javax.swing.JPanel;

import com.jidesoft.document.DocumentComponent;
import com.sce.esp.util.SwingHelper;

public abstract class AnalysisTab extends DocumentComponent {

	public Component c;
	protected int simId;

	public AnalysisTab(Component c, String name, int simId) {
		super(new JPanel(), name);
		this.simId = simId;
		this.c = c;
	}

	public int getSimId() {
		return simId;
	}

	/**
	 * Once the tab is selected, this listener will refresh data from the core
	 * object.
	 */
	public abstract void registerListener();

	/**
	 * Refresh the tab given the constructor's parameters
	 * 
	 * @throws Exception
	 */
	protected abstract void refreshTab() throws Exception;

	/**
	 * Calls refreshTab() while setting the cursor.
	 */
	public void refresh() {
		try {
			refreshTab();
		} catch (Exception e) {
			e.printStackTrace();
			SwingHelper.showError(c, "Error", e, true);
		}
	}
}
