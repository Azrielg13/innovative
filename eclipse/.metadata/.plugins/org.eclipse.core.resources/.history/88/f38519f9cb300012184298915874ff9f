/**
 *           | Master Data Interface Version 2.0 |                       
 * 
 * Copyright (c) 2006, Southern California Edison, Inc.
 * 					   Distribution Staff Engineering Team. 					  
 * 	                   All rights reserved.
 * 
 * This software has been developed exclusively for internal usage.
 * Unauthorized use is prohibited.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 */
package com.sce.esp.object.model;
import java.sql.SQLException;


/**
 * A LoadServingEntityYear is  any object that physically serves load to a downstream object and also
 * imposes a set of guidelines for standard method calls that are available per year.
 * 
 * @author Distribution Staff Engineering
 * @version 2.0
 */
public interface LoadServingEntityYear extends CoreObjectYear {	
		
	/**
	 * Gets the temp sens.
	 * 
	 * @return the temp sens
	 * @throws SQLException 
	 * 
	 * @throws SQLException the SQL exception
	 */
	public double getTempSensitivity() throws SQLException;
	
	/**
	 * Sets the temp sens.
	 * 
	 * @param tempSens the temp sens
	 * 
	 * @throws SQLException the SQL exception
	 */
	public void setTempSensitivity(double tempSens)throws SQLException;
	
	/**
	 * Gets the use oper drf.
	 * 
	 * @return the use oper drf
	 */
	public boolean isUseOperDRF()throws SQLException;	
	
	/**
	 * Gets the use oper drf.
	 * 
	 * @param b the b
	 * 
	 * @return the use oper drf
	 * 
	 * @throws SQLException the SQL exception
	 */
	public void setUseOperDRF(boolean b)throws SQLException;
	
	/**
	 * Gets the use oper drf.
	 * 
	 * @return the use oper drf
	 * 
	 * @throws SQLException the SQL exception
	 */
	public Criteria getCriteria() throws SQLException;	
	
    /**
     * Gets the system.
     * 
     * @return the system
     * 
     * @throws SQLException the SQL exception
     */
    public Sys getSys() throws SQLException;
    
    /**
     * Gets the lse.
     * 
     * @return the lse
     * 
     * @throws SQLException the SQL exception
     */
    public LoadServingEntity getLse() throws SQLException;
    
}
