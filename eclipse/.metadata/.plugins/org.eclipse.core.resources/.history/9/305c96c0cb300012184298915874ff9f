/*
 * Copyright (c) 2002-2010 ESP Suite. All Rights Reserved.
 *
 *     
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, 
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; 
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE 
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, 
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 * 
 * Authors: Technology Integration Group, SCE
 * Developers: Eddie Mayfield, Frank Gonzales, Augustin Muniz,
 * Kate Suwan, Hiro Kushida, Andrew McNaughton, Brian Stonerock,
 * Russell Ragsdale, Patrick Ridge, Everett Aragon.
 * 
 */
package com.sce.esp.component;

import java.awt.Color;
import java.awt.Font;

import javax.swing.Icon;

import com.jidesoft.swing.StyleRange;

public interface ESPTable {

	/**
	 * Sets the title.
	 */
	public void setTitle();

	/**
	 * Gets the title.
	 * 
	 * @return the title
	 */
	public String getTitle();

	/**
	 * Gets the wrapped row at.
	 * 
	 * @param row
	 *            the row
	 * 
	 * @return the wrapped row at
	 */
	public int getWrappedRowAt(int row);

	/**
	 * Gets the font.
	 * 
	 * @param col
	 *            the col
	 * @param row
	 *            the row
	 * 
	 * @return the font
	 */
	public Font getFont(int row, int col);

	/**
	 * Gets the foreground.
	 * 
	 * @param col
	 *            the col
	 * @param row
	 *            the row
	 * 
	 * @return the foreground
	 */
	public Color getForeground(int row, int col);

	/**
	 * Gets the background.
	 * 
	 * @param col
	 *            the col
	 * @param row
	 *            the row
	 * 
	 * @return the background
	 */
	public Color getBackground(int row, int col);

	/**
	 * Gets the icon.
	 * 
	 * @param col
	 *            the col
	 * @param row
	 *            the row
	 * 
	 * @return the icon
	 */
	public Icon getIcon(int row, int col);

	/**
	 * Gets the tool tip.
	 * 
	 * @param col
	 *            the col
	 * @param row
	 *            the row
	 * 
	 * @return the tool tip
	 */
	public String getToolTip(int row, int col);

	/**
	 * Gets the style.
	 * 
	 * @param col
	 *            the col
	 * @param row
	 *            the row
	 * 
	 * @return the style
	 */
	public StyleRange getStyle(int row, int col);

	/**
	 * Gets the MDI table scroll pane.
	 * 
	 * @return the MDI table scroll pane
	 */
	public ESPTableScrollPane getTableScrollPane();

	/**
	 * Checks if is cell editable.
	 * 
	 * @param col
	 *            the col
	 * @param row
	 *            the row
	 * 
	 * @return true, if is cell editable
	 */
	public boolean isCellEditable(int row, int col);

	public void setValueAt(Object value, int row, int col);

	public void invalidateCache();

	// public Icon getIconCached(int row, int col);
	//
	// public String getToolTipCached(int row, int col);
}