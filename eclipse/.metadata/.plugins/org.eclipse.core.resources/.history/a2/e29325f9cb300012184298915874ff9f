package com.sce.esp.object.model;
import java.io.Serializable;
import java.sql.SQLException;
import java.util.Collection;

import com.sce.esp.object.dao.PortfolioDAO;
import javax.persistence.Entity;
import javax.persistence.NamedNativeQueries;
import javax.persistence.NamedNativeQuery;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
@Entity
@Table(schema="MDI",name="MDIS00_PORTFOLIO")
@NamedQueries({
	@NamedQuery(name = "findByID", query="SELECT o FROM Portfolio o WHERE o.PORTFOLIO_ID=?1"),//AUTO-GENERATED
	@NamedQuery(name = "findAll", query="SELECT o FROM Portfolio o"),//AUTO-GENERATED
	@NamedQuery(name = "findAllActive", query="SELECT o FROM Portfolio o WHERE o.DELETED_TS IS NULL"),//AUTO-GENERATED
})
@NamedNativeQueries({
	@NamedNativeQuery(name = "refresh", query="SELECT o.* FROM MDIS00_PORTFOLIO o WHERE o.PORTFOLIO_ID=?"),//AUTO-GENERATED
})
public class Portfolio extends PortfolioDAO implements Serializable{

	private static final long serialVersionUID = -843536897257331106L;

	public static final int PORTFOLIO_TYPE_PLAN=1;
	
	public static final int APPROVED = 32;
	public static final int EMERGENT = 16;
	public static final int CONCEPTUAL = 8;
	
	public static final int PORTFOLIO_TYPE_CLUSTER=2;
	public static final int PORTFOLIO_TYPE_SCENARIO=3;
	
//	public static final int PORTFOLIO_TYPE_PLAN=1;
//	public static final int PORTFOLIO_TYPE_CLUSTER=2;
//	public static final int PORTFOLIO_TYPE_SCENARIO=3;


	public static final int QC1 = 4;
	public Portfolio(){
	}
	public Portfolio(int portfolioId){
		super(portfolioId);
	}
	public Portfolio(Portfolio orig){
		super(orig);
	}
	public static Collection<Portfolio> getPortfolios(int portfolioType) throws SQLException{
		return getCollection("SELECT o FROM Portfolio o WHERE o.DELETED_TS IS NULL AND o.PORTFOLIO_TYPE=?1",portfolioType);
	}
	/**
	 * TODO make more dynamic in case new clusters are added
	 * @return
	 * @throws SQLException
	 */
	public SceProjRev getClusterRevision(){
		SceProjRev rev = null;
		try{
		switch(getPortfolioId()){
			case QC1: return PortfolioProj.QueueCluster.QC1.getProject().getSceProjRev();
		}
		}catch(Exception e){
			e.printStackTrace();
		}
		return rev;
	}
	
	
	public String toString(){
		return this.getPortfolioName();
	}
}
