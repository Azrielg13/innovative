package com.sce.esp.object.model;

import java.io.Serializable;

import com.sce.esp.object.dao.AssumptionLocDAO;

import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.NamedNativeQueries;
import javax.persistence.NamedNativeQuery;
@Entity
@Table(schema="MDI",name="MDIT75_ASSUMPTION_LOC")
@NamedQueries({
	@NamedQuery(name = "findByID", query="SELECT o FROM AssumptionLoc o WHERE o.LOC_ID=?1 AND o.ASSUMPTION_ID=?2"),//AUTO-GENERATED
	@NamedQuery(name = "findAll", query="SELECT o FROM AssumptionLoc o"),//AUTO-GENERATED
	@NamedQuery(name = "findAllActive", query="SELECT o FROM AssumptionLoc o WHERE o.DELETED_TS IS NULL"),//AUTO-GENERATED
	@NamedQuery(name = "findByAssumption", query="SELECT o FROM AssumptionLoc o WHERE o.ASSUMPTION_ID=?1 AND o.DELETED_TS IS NULL"),//AUTO-GENERATED
})
@NamedNativeQueries({
	@NamedNativeQuery(name = "refresh", query="SELECT o.* FROM MDIT75_ASSUMPTION_LOC o WHERE o.LOC_ID=? AND o.ASSUMPTION_ID=?"),//AUTO-GENERATED
})
public class AssumptionLoc extends AssumptionLocDAO implements Serializable{ 

	public AssumptionLoc(){
	}
	public AssumptionLoc(AssumptionLoc orig) {
		super(orig);
	}

	public AssumptionLoc(int locId, int assumptionId) {
		super(locId, assumptionId);
	}
}
