package com.sce.esp.object.model;
import java.sql.SQLException;

import javax.persistence.Entity;
import javax.persistence.NamedNativeQueries;
import javax.persistence.NamedNativeQuery;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

import com.sce.esp.object.dao.LookUpDAO;
@Entity
@Table(schema="MDI",name="MDI006_LOOK_UP")
@NamedQueries({
	@NamedQuery(name = "findByID", query="SELECT o FROM LookUp o WHERE o.ID=?1"),//AUTO-GENERATED
	@NamedQuery(name = "findAll", query="SELECT o FROM LookUp o"),//AUTO-GENERATED
	@NamedQuery(name = "findAllActive", query="SELECT o FROM LookUp o WHERE o.DELETED_TS IS NULL"),//AUTO-GENERATED
	@NamedQuery(name = "findByLookUpGroup", query="SELECT o FROM LookUp o WHERE o.LOOK_UP_GROUP_ID=?1 AND o.DELETED_TS IS NULL"),//AUTO-GENERATED
	@NamedQuery(name = "findByParent", query="SELECT o FROM LookUp o WHERE o.PARENT_ID=?1 AND o.DELETED_TS IS NULL"),//AUTO-GENERATED
})
@NamedNativeQueries({
	@NamedNativeQuery(name = "refresh", query="SELECT o.* FROM MDI006_LOOK_UP o WHERE o.ID=?"),//AUTO-GENERATED
})
public class LookUp extends LookUpDAO{
	
	public final static int PROCUREMENT_MAT_IMM=232;
	public final static int WAREHOUSE_MAT_IMM=233;
	public final static int SCE_LABOR_OH = 229;
	public final static int NON_LABOR_OH = 230;
	public final static int SUPPLY_OH = 237;
	public final static int TOOL_OH = 235;
	public final static int VEHICLE_IMM = 231;
	public final static int B_MATERIALS_OH = 234;

	
	
	public final static int DIST_PLAN_OH = 239;
	public final static int PREFAB_OH = 240;
	public final static int BPI_OH = 241;
	public final static int IT_DIV_OH = 244;
	
	
	public final static int PAID_ABSENCE = 236;
	public final static int MAT_SALES_TAX = 242;
	public final static int PENSIONS_BENEFITS = 243;
	public final static int CONTIGENCY = 245;
	
	public final static int ENGINEERING_PROCURE = 246;
	public final static int ADMIN_GENERAL = 247;
	public final static int ITCC = 238;
	
	public final static int INSTALL = 3;
	public final static int REMOVE = 4;
	public final static int TEMP = 5;
	public final static int RELOC = 256;


	
	public final static int Wire_Cable_Bus_Bar	=294;
	public final static int Steel_Fabricated_Structural	=295;
	public final static int Circuit_Breakers	=296;
	public final static int Electric_Wiring_and_Components	=297;
	public final static int Instrument_Transformers	=298;
	public final static int Reactors_and_Line_Traps	=299;
	public final static int Capacitors_and_Regulators	=300;
	public final static int Line_Switches	=301;
	public final static int Substation_Transformer	=302;
	public final static int Protection_and_Test	=303;
	public final static int Metals_Fabricated_Metal_Products	=304;
	public final static int Poles_Wood_Products	=305;
	public final static int Pole_Line_Hdwe_Connectors	=306;
	public final static int Steel_Lattice_Towers	=307;
	public final static int Steel_Poles	=308;
	public final static int Other_Material	=309;
	
	
	public final static int SCE_Project_Management	=314;
	public final static int SCE_Engineering	=315;
	public final static int SCE_Craft	=313;
	
	
	public final static int Contract_Construction	=316;
	public final static int Contract_Project_Management	=317;
	public final static int Contract_Engineering	=318;
	
	
	public final static int Unassigned_Costs =319;
	public final static int Equipment_Rental_and_Other_Costs	=320;
	public final static int IT_Services_and_Equipment	=321;
	public final static int SAP_Conversion	=322;
	public final static int Internal_Order_BA	=323;
	public final static int Order_to_Order	=324;
	
	//Funding Types
	public final static int ISO = 16;
	public final static int NONISO = 17;
	public final static int NAC = 18;
	public final static int AC = 19;
	public static final int TELECOM = 328;
	
	//Funder Types
	public final static int EXPENSE = 399;
	public final static int CUSTOMER = 15;
	public final static int CAPITAL = 14;
	
	public static final int ISSUE_MDI_APP = 2000;
	public static final int ISSUE_IWP_APP = 2001;
	public static final int ISSUE_HST_APP = 2002;
	public static final int ISSUE_LGP_APP = 2003;
	public static final int ISSUE_PSI_APP = 2004;
	public static final int ISSUE_SCMT_APP = 2005;
	public static final int ISSUE_TSPOC_APP = 2006;
	
	public static final int ISSUE_NEW_STATUS = 2007;
	public static final int ISSUE_ASSIGNED_STATUS = 2009;
	public static final int ISSUE_JEROME_ID = 809;
	public static final int ISSUE_McNaughton_ID =231;
	public static final int ISSUE_CLOSED_STATUS = 2012;
	public static final int ISSUE_QA_STATUS = 2010;
	public static final int ISSUE_FIXED_STATUS = 2011;
	public static final int ISSUE_RESPONDED_STATUS = 2008;
	public static final Integer HIRO_ID = 778;
	public static final int ISSUE_DUP_STATUS = 2014;
	public static final int ISSUE_NAB_STATUS = 2013;
	public static final int ISSUE_BUG = 2018;
	public static final int ISSUE_INTERNAL = 2028;
	public static final int Issue_DATA = 2029;
	public static final int ISSUE_SYSTEM_ERROR = 2030;
	
	public enum DATA{
		RAM__ACCOUNTABLE(LookUpGroup.RAM,1),
		RAM__REVIEWER(LookUpGroup.RAM,2),
		RAM__PARTICIPENT(LookUpGroup.RAM,3),
		RAM__APPROVER(LookUpGroup.RAM,4),
		RAM__INPUT_REQUIRED(LookUpGroup.RAM,5),
		ROLE__PROJECT_ADMIN(LookUpGroup.ROLE,1);
		
		private int lookUpGroupId;
		private int inGroupId;
		private DATA(int lookUpGroupId, int inGroupId){
			this.lookUpGroupId = lookUpGroupId;
			this.inGroupId = inGroupId;
		}
		public LookUp getInstance() throws SQLException{
			return LookUp.getInstance(lookUpGroupId,inGroupId);
		}
	}
	public class RAM{
		public final static int ID=15;
		public final static int ACCOUNTABLE = 251;
		public final static int REVIEWER = 252;
		public final static int PARTICIPENT = 253;
		public final static int APPROVER = 255;
		public final static int INPUT_REQUIRED = 256;
	}
	public class RAM2{
		public final static int ID=15;
		public final static int ACCOUNTABLE = 1;
		public final static int REVIEWER = 2;
		public final static int PARTICIPENT = 3;
		public final static int APPROVER = 4;
		public final static int INPUT_REQUIRED = 5;
	}
	
	public static final int SCOPE_WORK = 429;
	public static final int EST_WORK = 459;
	public static final int PROJECT_ADMIN = 224;
	

	public static LookUp getInstance(int lookUpGroupId, int inGroupId) throws SQLException{
		for(LookUp lu:LookUpGroup.getInstance(lookUpGroupId).getLookUps())
			if(lu.getInGroupId()==inGroupId)
				return lu;
		return null;
	}
	
	public LookUp(){
	}
	public LookUp(int id){
		super(id);
	}
	public LookUp(LookUp orig){
		super(orig);
	}
	public String toString(){
		return getName();
	}
	@Override
	public int compareTo(Object o) {
		if(o instanceof LookUp){
			LookUp lookUp = (LookUp)o;
			if(getRank()<lookUp.getRank())
				return -1;
			if(getRank()>lookUp.getRank())
				return 1;
		}
		return super.compareTo(o);
	}
}
