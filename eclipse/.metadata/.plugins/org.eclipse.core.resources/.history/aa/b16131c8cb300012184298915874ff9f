package com.sce.esp.dialog;

import java.awt.BorderLayout;
import java.io.IOException;
import java.sql.SQLException;

import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

import com.jidesoft.dialog.JideOptionPane;
import com.sce.esp.object.jpa.EntityManagerHelper;
import com.sce.esp.object.model.Org;
import com.sce.esp.object.model.User;
import com.sce.esp.security.ServerLocation;
import com.sce.esp.security.UserRole;
import com.sce.esp.util.ESPProperties;
import com.sce.esp.util.db.PDBConnection;
//
public class UATDialog {

	private static JComboBox orgCboBox;
	private static JComboBox roleCboBox;
	private static boolean SHOW_OTHERS = true;

	public static User getUserFromThisCustomDialog(String usr){

		Object[] components = new Object[5];

		components[0] = "<html>Welcome <b><i>"+usr+"</i></b>,  thank you for participating in UAT.</html>\n" +
		"<html>Please select the appropriate <b>Organization</b> and <b>Role</b>" +
		" for testing.</html>\n";

		JPanel orgPanel = new JPanel(new BorderLayout());
		orgPanel.add(new JLabel("Organization: "), BorderLayout.BEFORE_LINE_BEGINS);

		orgCboBox = new JComboBox();
		orgCboBox.setEditable(false);
		try {
			orgCboBox.addItem(new Org(Org.DE,"DE"));
			EntityManagerHelper.init(ESPProperties.getInstance().getDevDbUrl(), "mayfiee", "edison");
			for(Org org: Org.getAllActive())
				orgCboBox.addItem(org);
			PDBConnection.getInstance().getConnection().close();
		} catch (Exception e) {
			System.out.println("Can not connect to development to get list of organizations. Using Hardcoded list");
			try {
				orgCboBox.addItem(new Org(Org.TIG,"TIG"));
				orgCboBox.addItem(new Org(Org.SPI,"SPI"));
				orgCboBox.addItem(new Org(Org.TRANS,"TRANS"));
			}
			catch (SQLException e1) {
				e1.printStackTrace();
			}
		}
		orgPanel.add(orgCboBox, BorderLayout.CENTER);
		components[1] = orgPanel;
		//=========================================

		JPanel rolePanel = new JPanel(new BorderLayout());
		rolePanel.add(new JLabel("User Role: "), BorderLayout.BEFORE_LINE_BEGINS);

		roleCboBox = new JComboBox();
		roleCboBox.addItem("Admin");
		roleCboBox.addItem("User");
		roleCboBox.addItem("Guest");

		rolePanel.add(roleCboBox, BorderLayout.CENTER);
		components[2] = rolePanel;

		roleCboBox.setSelectedItem("User");

		JPanel dbPanel = new JPanel(new BorderLayout());
		dbPanel.add(new JLabel("Environment: "), BorderLayout.BEFORE_LINE_BEGINS);

		JComboBox cb = new JComboBox();
		cb.addItem("Unit Test");
		if(SHOW_OTHERS ){
			cb.addItem("Production");
			cb.addItem("Development");
			cb.addItem("Local");
		}
		dbPanel.add(cb, BorderLayout.CENTER);

		components[3] = dbPanel;

		components[4] = "<html><font color=red><b>Contact TIG</b> if you have problems" +
		" logging in.</font></html>";

		String[] options = {
				"Login",
				"Cancel"
		};

		JFrame teen = new JFrame();

		//         JideOptionPane 

		int result = JideOptionPane.showOptionDialog(
				teen,                             // the parent that the dialog blocks
				components,                                    // the dialog message array
				"ESP Suite | UAT Login",                 // the title of the dialog window
				JOptionPane.DEFAULT_OPTION,                 // option type
				JOptionPane.DEFAULT_OPTION,            // message type
				null,                                       // optional icon, use null to use the default icon
				options,                                    // options string array, will be made into buttons
				options[0]                                  // option that should be made into a default button
		);

		switch (result) {
			case 0: // login
				;
				break;
			case 1: // no
				JideOptionPane.showMessageDialog(teen, "Why are you leaving?  You haven't even started yet :(");
				System.exit(0);
				break;
			default:
				System.exit(0);
				break;
		}


		UserRole ur = new UserRole();

		if(roleCboBox.getSelectedIndex() == 2)
			ur.setProperty("MDI_R_INQUIRY", "granted");
		else if(roleCboBox.getSelectedIndex() == 1)
			ur.setProperty("MDI_R_USER", "granted");
		else
			ur.setProperty("MDI_R_ADMIN", "granted");

		try {
			if(cb.getSelectedIndex()>1)
				EntityManagerHelper.init(getDbUrl(cb.getSelectedIndex()), "MDI", "edison");
			else
				EntityManagerHelper.init(getDbUrl(cb.getSelectedIndex()), "mayfiee", "mayfiez");
		} catch (Exception e) {
			e.printStackTrace();
		}
		try {
			User.setActiveUser(usr);
			if(User.getActiveUser()==null){
				System.out.println("User account '"+usr+"' not present in application.");
				User newUser = new User();
				newUser.setUsername(usr);
				new NewUserDialog(null, newUser);
				User.setActiveUser(newUser.getUsername());
				if(User.getActiveUser()==null) {
					ErrorDialog.showError(null, "User Not Present", new Exception());
					System.exit(0);
				}
			}
			User.getActiveUser().setSessionOrgId(((Org)orgCboBox.getSelectedItem()).getOrgId());
			User.getActiveUser().setSessionUserRole(ur);
		} catch (Exception e) {
			e.printStackTrace();
		}
	

		return User.getActiveUser();
	}

	private static String getDbUrl(int index){
		switch(index){
			case 0: return UT.getUrl();
			case 1: return PROD.getUrl();
			case 2: return DEV.getUrl();
			case 3: return LOC.getUrl();
			default:break;
		}
		return null;
	}



	private static ServerLocation PROD = new ServerLocation("PRODUCTION",ESPProperties.getInstance().getProdDbUrl());
	private static ServerLocation ST = new ServerLocation("System Test",ESPProperties.getInstance().getStDbUrl());

	private static ServerLocation UT = new ServerLocation("Unit Test",ESPProperties.getInstance().getUtDbUrl());
	private static ServerLocation DEV = new ServerLocation("Development",ESPProperties.getInstance().getDevDbUrl());  

	private static ServerLocation LOC = new ServerLocation("Local",ESPProperties.getInstance().getLocalDbUrl()); 

}