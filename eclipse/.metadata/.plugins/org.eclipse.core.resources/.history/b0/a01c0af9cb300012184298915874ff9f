/**
 * 
 */
package com.sce.esp.object.model;

import java.io.Serializable;

import javax.persistence.Entity;
import javax.persistence.NamedNativeQueries;
import javax.persistence.NamedNativeQuery;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.swing.ImageIcon;

import com.sce.esp.object.dao.WorkGroupDAO;
import com.sce.esp.util.IconsFactory;
@Entity
@Table(schema="MDI",name="MDIS13_WORK_GROUP")
@NamedQueries({
	@NamedQuery(name = "findByID", query="SELECT o FROM WorkGroup o WHERE o.WORK_GROUP_ID=?1"),//AUTO-GENERATED
	@NamedQuery(name = "findAll", query="SELECT o FROM WorkGroup o"),//AUTO-GENERATED
	@NamedQuery(name = "findAllActive", query="SELECT o FROM WorkGroup o WHERE o.DELETED_TS IS NULL"),//AUTO-GENERATED
})
@NamedNativeQueries({
	@NamedNativeQuery(name = "refresh", query="SELECT o.* FROM MDIS13_WORK_GROUP o WHERE o.WORK_GROUP_ID=?"),//AUTO-GENERATED
})
public class WorkGroup extends WorkGroupDAO implements Serializable{

	private static final long serialVersionUID = -9204124654826834701L;
	public static final int ENG = 1;
	public static final int CONST = 2;
	public static final String[] TYPES = {"Eng / Design", "Construction"};
	
	public WorkGroup(){
		super(0);
	}
	
	public WorkGroup(int workGroupId) {
		super(workGroupId);
	}
	
	public WorkGroup(WorkGroup workGroup) {
		super(workGroup);
	}

	public String toString() {
		return getName();
	}
	
	
	public ImageIcon getIcon(){
		
		if(getName().equals("Distribution"))
			return  IconsFactory.getScaledImageIcon("icons/D.png",16);
		if(getName().equals("Transmission"))
			return  IconsFactory.getScaledImageIcon("icons/X.png",16);
		if(getName().equals("SubTransmission"))
			return  IconsFactory.getScaledImageIcon("icons/ST.png",16);
		if(getName().equals("IT"))
			return  IconsFactory.getScaledImageIcon("icons/I.png",16);
		if(getName().equals("Substation"))
			return  IconsFactory.getScaledImageIcon("icons/S.png",16);
		
		return IconsFactory.getScaledImageIcon("icons/D.png",16);
	}
	
	
	public int compareTo(Object o){
		if(o instanceof WorkGroup){
			if(getWorkGroupId() < ((WorkGroup)o).getWorkGroupId())
				return -1;
			if(getWorkGroupId() > ((WorkGroup)o).getWorkGroupId())
				return 1;
		}
		return super.compareTo(o);
	}
	
}
