/*
 * Copyright (c) 2002-2010 ESP Suite. All Rights Reserved.
 *
 *     
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, 
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; 
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE 
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, 
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 * 
 * Authors: Technology Integration Group, SCE
 * Developers: Eddie Mayfield, Frank Gonzales, Augustin Muniz,
 * Kate Suwan, Hiro Kushida, Andrew McNaughton, Brian Stonerock,
 * Russell Ragsdale, Patrick Ridge, Everett Aragon.
 * 
 */
package com.sce.esp.security;


import javax.security.auth.callback.Callback;
import javax.security.auth.callback.CallbackHandler;
import javax.security.auth.callback.NameCallback;
import javax.security.auth.callback.PasswordCallback;
import javax.security.auth.login.AccountExpiredException;
import javax.security.auth.login.CredentialExpiredException;
import javax.security.auth.login.FailedLoginException;
import javax.security.auth.login.LoginContext;
import javax.security.auth.login.LoginException;


/**
 * <b>JAASLoginService</b> implements a <b>LoginService</b>
 * that uses JAAS for authentication. <b>JAASLoginService</b> uses the 
 * server name as name of the configuration for JAAS.
 * 
 * @author Bino George
 */
public class JAASLoginService extends LoginService {

	/**
	 * Constructor for <b>JAASLoginService</b>
	 * @param server server name that is also used for the JAAS config name
	 */
	public JAASLoginService(String server) {
		super(server);
	}
	
        /**
         * Default JavaBeans constructor
         */
        public JAASLoginService() {
            super();
        }
        
	
	/**
	 * @inheritDoc
	 * 	 
	 */
	public boolean authenticate(String name, char[] password, ServerLocation server) throws Exception {
		try {
			LoginContext loginContext = null;

			loginContext = new LoginContext(getServer(),
					new JAASCallbackHandler(name, password));
			loginContext.login();
			return true;
		} catch (AccountExpiredException e) {
			e.printStackTrace();
			return false;
		} catch (CredentialExpiredException e) {
			e.printStackTrace();
			return false;
		} catch (FailedLoginException e) {
			e.printStackTrace();
			return false;
		} catch (LoginException e) {
                        // TODO add explanation?
			e.printStackTrace();
			return false;
		} catch (Throwable e) {
			e.printStackTrace();
			return false;
		}
	}

	class JAASCallbackHandler implements CallbackHandler {

		private String name;

		private char[] password;

		public JAASCallbackHandler(String name, char[] passwd) {
			this.name = name;
			this.password = passwd;
		}

		public void handle(Callback[] callbacks) throws java.io.IOException {
			for (int i = 0; i < callbacks.length; i++) {
				if (callbacks[i] instanceof NameCallback) {
					NameCallback cb = (NameCallback) callbacks[i];
					cb.setName(name);
				} else if (callbacks[i] instanceof PasswordCallback) {
					PasswordCallback cb = (PasswordCallback) callbacks[i];
					cb.setPassword(password);
				}
			}
		}

	}

	
}
