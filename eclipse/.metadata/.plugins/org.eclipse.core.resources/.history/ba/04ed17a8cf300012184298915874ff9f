/*
 * Copyright (c) 2002-2010 ESP Suite. All Rights Reserved.
 *
 *     
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, 
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; 
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE 
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, 
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 * 
 * Authors: Technology Integration Group, SCE
 * Developers: Eddie Mayfield, Frank Gonzales, Augustin Muniz,
 * Kate Suwan, Hiro Kushida, Andrew McNaughton, Brian Stonerock,
 * Russell Ragsdale, Patrick Ridge, Everett Aragon.
 * 
 */
package com.sce.esp.util.ui;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

import javax.swing.Icon;
import javax.swing.JLabel;

public class HyperLinkLabel extends JLabel{
	/**
	 * 
	 */
	private static final long serialVersionUID = -5539372947216175626L;
	String url;
	Color rc;

	public HyperLinkLabel(String text, Icon icon, String url){
		super(text);
		this.setIcon(icon);
		this.url=url;
		addListeners();
	}
	private void addListeners(){
		final String thisUrl=url;
		this.addMouseListener(new MouseAdapter(){
			public void mouseClicked(MouseEvent e){
				HyperLinker.displayURL(thisUrl);
			}
			public void mouseEntered(MouseEvent e){
				HyperLinkLabel.this.rc=HyperLinkLabel.this.getForeground();
				HyperLinkLabel.this.setCursor(new Cursor(Cursor.HAND_CURSOR));
				HyperLinkLabel.this.setForeground(Color.blue);
			}
			public void mouseExited(MouseEvent e){
				HyperLinkLabel.this.setForeground(HyperLinkLabel.this.rc);
				HyperLinkLabel.this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
			}

		});

	}
}

