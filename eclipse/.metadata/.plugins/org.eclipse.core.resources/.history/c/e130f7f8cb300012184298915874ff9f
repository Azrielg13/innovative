/**
 *           | Master Data Interface Version 2.0 |                       
 * 
 * Copyright (c) 2006, Southern California Edison, Inc.
 * 					   Distribution Staff Engineering Team. 					  
 * 	                   All rights reserved.
 * 
 * This software has been developed exclusively for internal usage.
 * Unauthorized use is prohibited.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 */
package com.sce.esp.object.model;

import java.io.Serializable;
import java.sql.SQLException;
import java.util.Hashtable;

import com.sce.esp.log.EspLogger;


/**
 * The Class AgMonthlyPeak.
 * 
 * @author Distribution Staff Engineering
 * @version 2.0
 */
public class AgMonthlyPeak implements AbstractMonthlyPeak, Serializable{
    
	
	private static Hashtable<String,AgMonthlyPeak> hash = new Hashtable<String,AgMonthlyPeak>();
	
	
    /** The AgObject. */
    private AgObject ao;    
    
    /** The year. */
    private int year;
    
    /** The month. */
    private int month;

	private int simId;
    
    /**
     * 
     * @param ao the <code>AgObject</code>
     * @param year the calendar year
     * @param month the calendar month
     */
    private AgMonthlyPeak(AgObject ao, int simId, int year, int month){
        this.ao = ao;
        this.simId = simId;
        this.year=year;
        this.month=month;
    }
    
    
    public static AgMonthlyPeak getInstance(AgObject ao, int simId, int year, int month){
    	if(MDIObject.isNull(ao.getPlanyear(), ao, year, month)) return null;
    	String key = MDIObject.getHashKey(new Object[]{ao.getPlanyear(), ao, simId, year, month});
    	AgMonthlyPeak o = hash.get(key);
		if(o == null){
			o = new AgMonthlyPeak(ao, simId, year, month);
			hash.put(key,o);
		}
		return o;
    }
    
    /**
     * Returns the <code>AgObject</code> object that was passed
     * in the constructor.
     * @return the <code>AgObject</code>.
     */
    public AgObject getAgObject(){
        return ao;
    }
    
	/* (non-Javadoc)
	 * @see com.sce.mdi.object.AbstractMonthlyPeak#getPeakValue()
	 */   
	public double getPeakValue() throws SQLException {
        double sum=0;
        for(Sys sys:getAgObject().getSyss(simId))
        	sum += sys.getMonthlyPeak(simId,year,month).getPeakValue();
        return sum;
	}


	public int getMonth() {		
		return month;
	}

}