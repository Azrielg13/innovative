package com.sce.esp.object.dao;
/**Copy Right Frank todo */
/**Description of class, (we need to get this from somewhere, database? xml?)*/
import com.sce.esp.object.jpa.AutoInsertable;
import com.sce.esp.object.jpa.EntityManagerHelper;
import com.sce.esp.object.jpa.PrimaryKey;
import com.sce.esp.object.model.LookUp;
import com.sce.esp.object.model.SceProjRev;
import com.sce.esp.object.model.Tspoc;
import com.sce.esp.object.model.TspocRefList;
import com.sce.esp.object.model.User;
import java.util.Calendar;
import java.util.Collection;
import java.util.Vector;
import javax.persistence.Cache;
import javax.persistence.Column;
import javax.persistence.EntityManager;
import javax.persistence.Id;
import javax.persistence.SequenceGenerator;
import javax.persistence.TypedQuery;
public abstract class TspocDAO extends DataAccessObject{
	public static enum KEY_PROPERTY{ID};
	public static enum PROPERTY{ID,SCE_PROJ_REV_ID,MPO_PROJ_NAME,MPO_PROJ_NAME_PREVIOUS,MPO_PROJ_NAME_SCE,MPO_PROJ_NAME_CUST,MPO_PROJ_NAME_CUST_PREV,MPO_PROJ_NAME_ASSOC_PROJ,MPO_PROJ_SEG,MPO_FLAG_PROJ_SYS_SPLIT,MPO_PROJ_LOC_REGION,MPO_PROJ_LOC_CITY,MPO_PROJ_LOC_COUNTY,MPO_PUBLISHED_REPORT_COMMENT,MPO_GROUP_LEAD_ID,MPO_GROUP_LEAD_PAX_NUM,MPO_DEV_PM_USER_ID,MPO_DEV_PM_PAX_NUM,MPO_EXEC_PM_USER_ID,MPO_EXEC_PM_PAX_NUM,MPO_PROJ_ANALYST_USER_ID,MPO_PROJ_ANALYST_PAX_NUM,MPO_PCE_SCHEDULER_USER_ID,MPO_PCE_SCHEDULER_PAX_NUM,MPO_PCE_COST_USER_ID,MPO_PCE_COST_PAX_NUM,MPO_PMWIF_NUM,SPI_PMWIF_ASSIGNED_DIR,MPO_PMWIF_ASSIGNED_M3,MPO_PMWIF_ASSIGNED_PM,MPO_PUBLISHED_OPERATING_DATE,MPO_DB_MGR_NOTE,GO131D_STATUS,MPO_EPEF_COMMENT,ARRA,REF_LIST_ID,PROJ_LIST_SEQ,MPO_PROJ_REASON_LISTED,TSPOC_ANALYST_NOTES};
	public final static int ID_LIMIT = 9;
	public final static int SCEPROJREVID_LIMIT = 9;
	public final static int MPOPROJNAME_LIMIT = 768;
	public final static int MPOPROJNAMEPREVIOUS_LIMIT = 768;
	public final static int MPOPROJNAMESCE_LIMIT = 768;
	public final static int MPOPROJNAMECUST_LIMIT = 768;
	public final static int MPOPROJNAMECUSTPREV_LIMIT = 768;
	public final static int MPOPROJNAMEASSOCPROJ_LIMIT = 768;
	public final static int MPOPROJSEG_LIMIT = 768;
	public final static int MPOFLAGPROJSYSSPLIT_LIMIT = 768;
	public final static int MPOPROJLOCREGION_LIMIT = 768;
	public final static int MPOPROJLOCCITY_LIMIT = 768;
	public final static int MPOPROJLOCCOUNTY_LIMIT = 768;
	public final static int MPOPUBLISHEDREPORTCOMMENT_LIMIT = 2048;
	public final static int MPOGROUPLEADID_LIMIT = 9;
	public final static int MPOGROUPLEADPAXNUM_LIMIT = 40;
	public final static int MPODEVPMUSERID_LIMIT = 9;
	public final static int MPODEVPMPAXNUM_LIMIT = 40;
	public final static int MPOEXECPMUSERID_LIMIT = 9;
	public final static int MPOEXECPMPAXNUM_LIMIT = 40;
	public final static int MPOPROJANALYSTUSERID_LIMIT = 9;
	public final static int MPOPROJANALYSTPAXNUM_LIMIT = 40;
	public final static int MPOPCESCHEDULERUSERID_LIMIT = 9;
	public final static int MPOPCESCHEDULERPAXNUM_LIMIT = 40;
	public final static int MPOPCECOSTUSERID_LIMIT = 9;
	public final static int MPOPCECOSTPAXNUM_LIMIT = 80;
	public final static int MPOPMWIFNUM_LIMIT = 40;
	public final static int SPIPMWIFASSIGNEDDIR_LIMIT = 1;
	public final static int MPOPMWIFASSIGNEDM3_LIMIT = 1;
	public final static int MPOPMWIFASSIGNEDPM_LIMIT = 1;
	public final static int MPOPUBLISHEDOPERATINGDATE_LIMIT = 7;
	public final static int MPODBMGRNOTE_LIMIT = 2048;
	public final static int GO131DSTATUS_LIMIT = 9;
	public final static int MPOEPEFCOMMENT_LIMIT = 2048;
	public final static int ARRA_LIMIT = 1;
	public final static int REFLISTID_LIMIT = 9;
	public final static int PROJLISTSEQ_LIMIT = 9;
	public final static int MPOPROJREASONLISTED_LIMIT = 256;
	public final static int TSPOCANALYSTNOTES_LIMIT = 2048;
	private int id;
	private int sceProjRevId;
	private String mpoProjName;
	private String mpoProjNamePrevious;
	private String mpoProjNameSce;
	private String mpoProjNameCust;
	private String mpoProjNameCustPrev;
	private String mpoProjNameAssocProj;
	private String mpoProjSeg;
	private String mpoFlagProjSysSplit;
	private String mpoProjLocRegion;
	private String mpoProjLocCity;
	private String mpoProjLocCounty;
	private String mpoPublishedReportComment;
	private int mpoGroupLeadId;
	private String mpoGroupLeadPaxNum;
	private int mpoDevPmUserId;
	private String mpoDevPmPaxNum;
	private int mpoExecPmUserId;
	private String mpoExecPmPaxNum;
	private int mpoProjAnalystUserId;
	private String mpoProjAnalystPaxNum;
	private int mpoPceSchedulerUserId;
	private String mpoPceSchedulerPaxNum;
	private int mpoPceCostUserId;
	private String mpoPceCostPaxNum;
	private String mpoPmwifNum;
	private boolean spiPmwifAssignedDir;
	private boolean mpoPmwifAssignedM3;
	private boolean mpoPmwifAssignedPm;
	private Calendar mpoPublishedOperatingDate;
	private String mpoDbMgrNote;
	private int go131DStatus;
	private String mpoEpefComment;
	private boolean arra;
	private int refListId;
	private int projListSeq;
	private String mpoProjReasonListed;
	private String tspocAnalystNotes;
	private SceProjRev sceProjRev;
	private User mpoGroupLead;
	private User mpoDevPm;
	private User mpoExecPm;
	private User mpoProjAnalyst;
	private User mpoPceScheduler;
	private User mpoPceCost;
	private LookUp lookUp;
	private TspocRefList refList;
	public static Tspoc getInstance(int id)throws java.sql.SQLException{
		return getInstance(id, true);
	}
	public static Tspoc getInstance(int id, boolean fetch)throws java.sql.SQLException{
		if(isNull(id))return null;
		EntityManager em = EntityManagerHelper.getEntityManager();
		PrimaryKey pk = new PrimaryKey(id);
		Cache cache = em.getEntityManagerFactory().getCache();
		Tspoc o = null;
		if(cache != null && cache.contains(Tspoc.class, pk))
			o = em.find(Tspoc.class, pk);
		if(o==null && getAICache().contains(Tspoc.class, pk))
			o = getAICache().find(Tspoc.class, pk);
		if(o==null && fetch)
			o = em.find(Tspoc.class, pk);
		if(o==null && fetch && Tspoc.class.getAnnotation(AutoInsertable.class) != null){
			o = new Tspoc(id);
			getAICache().cache(Tspoc.class, o);
		}
		return o;
	}
	public static Collection<Tspoc> getAll()throws java.sql.SQLException{
		return getNamedCollection("findAll");
	}
	public static Collection<Tspoc> getAllActive()throws java.sql.SQLException{
		return getNamedCollection("findAllActive");
	}
	public static Collection<Tspoc> getCollection(String[] props, Object... values)throws java.sql.SQLException{
		String qlString = "SELECT o FROM Tspoc o";
		if(props != null && props.length > 0){
			qlString += " WHERE";
			int p=0;
			for(String prop:props){
				if(p > 0)
					qlString +=" AND";
				if(values[p]==null)
					qlString += " o."+prop+" IS NULL";
				else
					qlString += " o."+prop+" = ?"+(p+1);
				p++;
			}
		}
		return getCollection(qlString,values);
	}
	public synchronized static Collection<Tspoc> getCollection(String jpql, Object... values)throws java.sql.SQLException{
		EntityManager em = EntityManagerHelper.getEntityManager();
		TypedQuery<Tspoc> tq = em.createQuery(jpql,Tspoc.class);
		if(values != null && values.length > 0){
			int p=1;
			for(Object value:values)
				if(value != null)
					tq = tq.setParameter(p++, value);
		}
		return tq.getResultList();
	}
	public synchronized static Collection<Tspoc> getNamedCollection(String name, Object... values)throws java.sql.SQLException{
		EntityManager em = EntityManagerHelper.getEntityManager();
		TypedQuery<Tspoc> tq = em.createNamedQuery(name,Tspoc.class);
		if(values != null && values.length > 0){
			int p=1;
			for(Object value:values)
				if(value != null)
					tq = tq.setParameter(p++, value);
		}
		return tq.getResultList();
	}
	public TspocDAO(){}
	public TspocDAO(int id){
		this.id=id;
	}
	public TspocDAO(TspocDAO orig){
		super(orig);
		copyFrom(orig);
	}
	public void copyFrom(TspocDAO orig){
		this.sceProjRevId=orig.getSceProjRevId();
		this.mpoProjName=orig.getMpoProjName();
		this.mpoProjNamePrevious=orig.getMpoProjNamePrevious();
		this.mpoProjNameSce=orig.getMpoProjNameSce();
		this.mpoProjNameCust=orig.getMpoProjNameCust();
		this.mpoProjNameCustPrev=orig.getMpoProjNameCustPrev();
		this.mpoProjNameAssocProj=orig.getMpoProjNameAssocProj();
		this.mpoProjSeg=orig.getMpoProjSeg();
		this.mpoFlagProjSysSplit=orig.getMpoFlagProjSysSplit();
		this.mpoProjLocRegion=orig.getMpoProjLocRegion();
		this.mpoProjLocCity=orig.getMpoProjLocCity();
		this.mpoProjLocCounty=orig.getMpoProjLocCounty();
		this.mpoPublishedReportComment=orig.getMpoPublishedReportComment();
		this.mpoGroupLeadId=orig.getMpoGroupLeadId();
		this.mpoGroupLeadPaxNum=orig.getMpoGroupLeadPaxNum();
		this.mpoDevPmUserId=orig.getMpoDevPmUserId();
		this.mpoDevPmPaxNum=orig.getMpoDevPmPaxNum();
		this.mpoExecPmUserId=orig.getMpoExecPmUserId();
		this.mpoExecPmPaxNum=orig.getMpoExecPmPaxNum();
		this.mpoProjAnalystUserId=orig.getMpoProjAnalystUserId();
		this.mpoProjAnalystPaxNum=orig.getMpoProjAnalystPaxNum();
		this.mpoPceSchedulerUserId=orig.getMpoPceSchedulerUserId();
		this.mpoPceSchedulerPaxNum=orig.getMpoPceSchedulerPaxNum();
		this.mpoPceCostUserId=orig.getMpoPceCostUserId();
		this.mpoPceCostPaxNum=orig.getMpoPceCostPaxNum();
		this.mpoPmwifNum=orig.getMpoPmwifNum();
		this.spiPmwifAssignedDir=orig.isSpiPmwifAssignedDir();
		this.mpoPmwifAssignedM3=orig.isMpoPmwifAssignedM3();
		this.mpoPmwifAssignedPm=orig.isMpoPmwifAssignedPm();
		this.mpoPublishedOperatingDate=orig.getMpoPublishedOperatingDate();
		this.mpoDbMgrNote=orig.getMpoDbMgrNote();
		this.go131DStatus=orig.getGo131DStatus();
		this.mpoEpefComment=orig.getMpoEpefComment();
		this.arra=orig.isArra();
		this.refListId=orig.getRefListId();
		this.projListSeq=orig.getProjListSeq();
		this.mpoProjReasonListed=orig.getMpoProjReasonListed();
		this.tspocAnalystNotes=orig.getTspocAnalystNotes();
	}
	public String getHashKey(){
		return getHashKey(getKeyValues());
	}
	public Object[] getKeyValues(){
		return new Object[]{id};
	}
	@Override
	public int hashCode(){
		return PrimaryKey.hashCode(getKeyValues());
	}
	@Id
	@SequenceGenerator(name="MDIS51_SEQ",sequenceName="MDIS51_SEQ")
	@Column(name="ID",nullable=false,length=9)
	public int getId(){
		return id;
	}
	public void setId(int id) throws java.sql.SQLException{
		if(isSame(id, getId()))return;
		int oldValue = getId();
		this.id=id;
		setProperty("ID", id, oldValue);
	}
	@Column(name="SCE_PROJ_REV_ID",nullable=false,length=9)
	public int getSceProjRevId(){
		return sceProjRevId;
	}
	public void setSceProjRevId(int sceProjRevId) throws java.sql.SQLException{
		if(isSame(sceProjRevId, getSceProjRevId()))return;
		int oldValue = getSceProjRevId();
		this.sceProjRevId=sceProjRevId;
		setProperty("SCE_PROJ_REV_ID", sceProjRevId, oldValue);
		sceProjRev=null;
	}
	@Column(name="MPO_PROJ_NAME",nullable=true,length=768)
	public String getMpoProjName(){
		return mpoProjName;
	}
	public void setMpoProjName(String mpoProjName) throws java.sql.SQLException{
		if(isSame(mpoProjName, getMpoProjName()))return;
		String oldValue = getMpoProjName();
		this.mpoProjName=mpoProjName;
		setProperty("MPO_PROJ_NAME", mpoProjName, oldValue);
	}
	@Column(name="MPO_PROJ_NAME_PREVIOUS",nullable=true,length=768)
	public String getMpoProjNamePrevious(){
		return mpoProjNamePrevious;
	}
	public void setMpoProjNamePrevious(String mpoProjNamePrevious) throws java.sql.SQLException{
		if(isSame(mpoProjNamePrevious, getMpoProjNamePrevious()))return;
		String oldValue = getMpoProjNamePrevious();
		this.mpoProjNamePrevious=mpoProjNamePrevious;
		setProperty("MPO_PROJ_NAME_PREVIOUS", mpoProjNamePrevious, oldValue);
	}
	@Column(name="MPO_PROJ_NAME_SCE",nullable=true,length=768)
	public String getMpoProjNameSce(){
		return mpoProjNameSce;
	}
	public void setMpoProjNameSce(String mpoProjNameSce) throws java.sql.SQLException{
		if(isSame(mpoProjNameSce, getMpoProjNameSce()))return;
		String oldValue = getMpoProjNameSce();
		this.mpoProjNameSce=mpoProjNameSce;
		setProperty("MPO_PROJ_NAME_SCE", mpoProjNameSce, oldValue);
	}
	@Column(name="MPO_PROJ_NAME_CUST",nullable=true,length=768)
	public String getMpoProjNameCust(){
		return mpoProjNameCust;
	}
	public void setMpoProjNameCust(String mpoProjNameCust) throws java.sql.SQLException{
		if(isSame(mpoProjNameCust, getMpoProjNameCust()))return;
		String oldValue = getMpoProjNameCust();
		this.mpoProjNameCust=mpoProjNameCust;
		setProperty("MPO_PROJ_NAME_CUST", mpoProjNameCust, oldValue);
	}
	@Column(name="MPO_PROJ_NAME_CUST_PREV",nullable=true,length=768)
	public String getMpoProjNameCustPrev(){
		return mpoProjNameCustPrev;
	}
	public void setMpoProjNameCustPrev(String mpoProjNameCustPrev) throws java.sql.SQLException{
		if(isSame(mpoProjNameCustPrev, getMpoProjNameCustPrev()))return;
		String oldValue = getMpoProjNameCustPrev();
		this.mpoProjNameCustPrev=mpoProjNameCustPrev;
		setProperty("MPO_PROJ_NAME_CUST_PREV", mpoProjNameCustPrev, oldValue);
	}
	@Column(name="MPO_PROJ_NAME_ASSOC_PROJ",nullable=true,length=768)
	public String getMpoProjNameAssocProj(){
		return mpoProjNameAssocProj;
	}
	public void setMpoProjNameAssocProj(String mpoProjNameAssocProj) throws java.sql.SQLException{
		if(isSame(mpoProjNameAssocProj, getMpoProjNameAssocProj()))return;
		String oldValue = getMpoProjNameAssocProj();
		this.mpoProjNameAssocProj=mpoProjNameAssocProj;
		setProperty("MPO_PROJ_NAME_ASSOC_PROJ", mpoProjNameAssocProj, oldValue);
	}
	@Column(name="MPO_PROJ_SEG",nullable=true,length=768)
	public String getMpoProjSeg(){
		return mpoProjSeg;
	}
	public void setMpoProjSeg(String mpoProjSeg) throws java.sql.SQLException{
		if(isSame(mpoProjSeg, getMpoProjSeg()))return;
		String oldValue = getMpoProjSeg();
		this.mpoProjSeg=mpoProjSeg;
		setProperty("MPO_PROJ_SEG", mpoProjSeg, oldValue);
	}
	@Column(name="MPO_FLAG_PROJ_SYS_SPLIT",nullable=true,length=768)
	public String getMpoFlagProjSysSplit(){
		return mpoFlagProjSysSplit;
	}
	public void setMpoFlagProjSysSplit(String mpoFlagProjSysSplit) throws java.sql.SQLException{
		if(isSame(mpoFlagProjSysSplit, getMpoFlagProjSysSplit()))return;
		String oldValue = getMpoFlagProjSysSplit();
		this.mpoFlagProjSysSplit=mpoFlagProjSysSplit;
		setProperty("MPO_FLAG_PROJ_SYS_SPLIT", mpoFlagProjSysSplit, oldValue);
	}
	@Column(name="MPO_PROJ_LOC_REGION",nullable=true,length=768)
	public String getMpoProjLocRegion(){
		return mpoProjLocRegion;
	}
	public void setMpoProjLocRegion(String mpoProjLocRegion) throws java.sql.SQLException{
		if(isSame(mpoProjLocRegion, getMpoProjLocRegion()))return;
		String oldValue = getMpoProjLocRegion();
		this.mpoProjLocRegion=mpoProjLocRegion;
		setProperty("MPO_PROJ_LOC_REGION", mpoProjLocRegion, oldValue);
	}
	@Column(name="MPO_PROJ_LOC_CITY",nullable=true,length=768)
	public String getMpoProjLocCity(){
		return mpoProjLocCity;
	}
	public void setMpoProjLocCity(String mpoProjLocCity) throws java.sql.SQLException{
		if(isSame(mpoProjLocCity, getMpoProjLocCity()))return;
		String oldValue = getMpoProjLocCity();
		this.mpoProjLocCity=mpoProjLocCity;
		setProperty("MPO_PROJ_LOC_CITY", mpoProjLocCity, oldValue);
	}
	@Column(name="MPO_PROJ_LOC_COUNTY",nullable=true,length=768)
	public String getMpoProjLocCounty(){
		return mpoProjLocCounty;
	}
	public void setMpoProjLocCounty(String mpoProjLocCounty) throws java.sql.SQLException{
		if(isSame(mpoProjLocCounty, getMpoProjLocCounty()))return;
		String oldValue = getMpoProjLocCounty();
		this.mpoProjLocCounty=mpoProjLocCounty;
		setProperty("MPO_PROJ_LOC_COUNTY", mpoProjLocCounty, oldValue);
	}
	@Column(name="MPO_PUBLISHED_REPORT_COMMENT",nullable=true,length=2048)
	public String getMpoPublishedReportComment(){
		return mpoPublishedReportComment;
	}
	public void setMpoPublishedReportComment(String mpoPublishedReportComment) throws java.sql.SQLException{
		if(isSame(mpoPublishedReportComment, getMpoPublishedReportComment()))return;
		String oldValue = getMpoPublishedReportComment();
		this.mpoPublishedReportComment=mpoPublishedReportComment;
		setProperty("MPO_PUBLISHED_REPORT_COMMENT", mpoPublishedReportComment, oldValue);
	}
	@Column(name="MPO_GROUP_LEAD_ID",nullable=true,length=9)
	public int getMpoGroupLeadId(){
		return mpoGroupLeadId;
	}
	public void setMpoGroupLeadId(int mpoGroupLeadId) throws java.sql.SQLException{
		if(isSame(mpoGroupLeadId, getMpoGroupLeadId()))return;
		int oldValue = getMpoGroupLeadId();
		this.mpoGroupLeadId=mpoGroupLeadId;
		setProperty("MPO_GROUP_LEAD_ID", mpoGroupLeadId, oldValue);
		mpoGroupLead=null;
	}
	@Column(name="MPO_GROUP_LEAD_PAX_NUM",nullable=true,length=40)
	public String getMpoGroupLeadPaxNum(){
		return mpoGroupLeadPaxNum;
	}
	public void setMpoGroupLeadPaxNum(String mpoGroupLeadPaxNum) throws java.sql.SQLException{
		if(isSame(mpoGroupLeadPaxNum, getMpoGroupLeadPaxNum()))return;
		String oldValue = getMpoGroupLeadPaxNum();
		this.mpoGroupLeadPaxNum=mpoGroupLeadPaxNum;
		setProperty("MPO_GROUP_LEAD_PAX_NUM", mpoGroupLeadPaxNum, oldValue);
	}
	@Column(name="MPO_DEV_PM_USER_ID",nullable=true,length=9)
	public int getMpoDevPmUserId(){
		return mpoDevPmUserId;
	}
	public void setMpoDevPmUserId(int mpoDevPmUserId) throws java.sql.SQLException{
		if(isSame(mpoDevPmUserId, getMpoDevPmUserId()))return;
		int oldValue = getMpoDevPmUserId();
		this.mpoDevPmUserId=mpoDevPmUserId;
		setProperty("MPO_DEV_PM_USER_ID", mpoDevPmUserId, oldValue);
		mpoDevPm=null;
	}
	@Column(name="MPO_DEV_PM_PAX_NUM",nullable=true,length=40)
	public String getMpoDevPmPaxNum(){
		return mpoDevPmPaxNum;
	}
	public void setMpoDevPmPaxNum(String mpoDevPmPaxNum) throws java.sql.SQLException{
		if(isSame(mpoDevPmPaxNum, getMpoDevPmPaxNum()))return;
		String oldValue = getMpoDevPmPaxNum();
		this.mpoDevPmPaxNum=mpoDevPmPaxNum;
		setProperty("MPO_DEV_PM_PAX_NUM", mpoDevPmPaxNum, oldValue);
	}
	@Column(name="MPO_EXEC_PM_USER_ID",nullable=true,length=9)
	public int getMpoExecPmUserId(){
		return mpoExecPmUserId;
	}
	public void setMpoExecPmUserId(int mpoExecPmUserId) throws java.sql.SQLException{
		if(isSame(mpoExecPmUserId, getMpoExecPmUserId()))return;
		int oldValue = getMpoExecPmUserId();
		this.mpoExecPmUserId=mpoExecPmUserId;
		setProperty("MPO_EXEC_PM_USER_ID", mpoExecPmUserId, oldValue);
		mpoExecPm=null;
	}
	@Column(name="MPO_EXEC_PM_PAX_NUM",nullable=true,length=40)
	public String getMpoExecPmPaxNum(){
		return mpoExecPmPaxNum;
	}
	public void setMpoExecPmPaxNum(String mpoExecPmPaxNum) throws java.sql.SQLException{
		if(isSame(mpoExecPmPaxNum, getMpoExecPmPaxNum()))return;
		String oldValue = getMpoExecPmPaxNum();
		this.mpoExecPmPaxNum=mpoExecPmPaxNum;
		setProperty("MPO_EXEC_PM_PAX_NUM", mpoExecPmPaxNum, oldValue);
	}
	@Column(name="MPO_PROJ_ANALYST_USER_ID",nullable=true,length=9)
	public int getMpoProjAnalystUserId(){
		return mpoProjAnalystUserId;
	}
	public void setMpoProjAnalystUserId(int mpoProjAnalystUserId) throws java.sql.SQLException{
		if(isSame(mpoProjAnalystUserId, getMpoProjAnalystUserId()))return;
		int oldValue = getMpoProjAnalystUserId();
		this.mpoProjAnalystUserId=mpoProjAnalystUserId;
		setProperty("MPO_PROJ_ANALYST_USER_ID", mpoProjAnalystUserId, oldValue);
		mpoProjAnalyst=null;
	}
	@Column(name="MPO_PROJ_ANALYST_PAX_NUM",nullable=true,length=40)
	public String getMpoProjAnalystPaxNum(){
		return mpoProjAnalystPaxNum;
	}
	public void setMpoProjAnalystPaxNum(String mpoProjAnalystPaxNum) throws java.sql.SQLException{
		if(isSame(mpoProjAnalystPaxNum, getMpoProjAnalystPaxNum()))return;
		String oldValue = getMpoProjAnalystPaxNum();
		this.mpoProjAnalystPaxNum=mpoProjAnalystPaxNum;
		setProperty("MPO_PROJ_ANALYST_PAX_NUM", mpoProjAnalystPaxNum, oldValue);
	}
	@Column(name="MPO_PCE_SCHEDULER_USER_ID",nullable=true,length=9)
	public int getMpoPceSchedulerUserId(){
		return mpoPceSchedulerUserId;
	}
	public void setMpoPceSchedulerUserId(int mpoPceSchedulerUserId) throws java.sql.SQLException{
		if(isSame(mpoPceSchedulerUserId, getMpoPceSchedulerUserId()))return;
		int oldValue = getMpoPceSchedulerUserId();
		this.mpoPceSchedulerUserId=mpoPceSchedulerUserId;
		setProperty("MPO_PCE_SCHEDULER_USER_ID", mpoPceSchedulerUserId, oldValue);
		mpoPceScheduler=null;
	}
	@Column(name="MPO_PCE_SCHEDULER_PAX_NUM",nullable=true,length=40)
	public String getMpoPceSchedulerPaxNum(){
		return mpoPceSchedulerPaxNum;
	}
	public void setMpoPceSchedulerPaxNum(String mpoPceSchedulerPaxNum) throws java.sql.SQLException{
		if(isSame(mpoPceSchedulerPaxNum, getMpoPceSchedulerPaxNum()))return;
		String oldValue = getMpoPceSchedulerPaxNum();
		this.mpoPceSchedulerPaxNum=mpoPceSchedulerPaxNum;
		setProperty("MPO_PCE_SCHEDULER_PAX_NUM", mpoPceSchedulerPaxNum, oldValue);
	}
	@Column(name="MPO_PCE_COST_USER_ID",nullable=true,length=9)
	public int getMpoPceCostUserId(){
		return mpoPceCostUserId;
	}
	public void setMpoPceCostUserId(int mpoPceCostUserId) throws java.sql.SQLException{
		if(isSame(mpoPceCostUserId, getMpoPceCostUserId()))return;
		int oldValue = getMpoPceCostUserId();
		this.mpoPceCostUserId=mpoPceCostUserId;
		setProperty("MPO_PCE_COST_USER_ID", mpoPceCostUserId, oldValue);
		mpoPceCost=null;
	}
	@Column(name="MPO_PCE_COST_PAX_NUM",nullable=true,length=80)
	public String getMpoPceCostPaxNum(){
		return mpoPceCostPaxNum;
	}
	public void setMpoPceCostPaxNum(String mpoPceCostPaxNum) throws java.sql.SQLException{
		if(isSame(mpoPceCostPaxNum, getMpoPceCostPaxNum()))return;
		String oldValue = getMpoPceCostPaxNum();
		this.mpoPceCostPaxNum=mpoPceCostPaxNum;
		setProperty("MPO_PCE_COST_PAX_NUM", mpoPceCostPaxNum, oldValue);
	}
	@Column(name="MPO_PMWIF_NUM",nullable=true,length=40)
	public String getMpoPmwifNum(){
		return mpoPmwifNum;
	}
	public void setMpoPmwifNum(String mpoPmwifNum) throws java.sql.SQLException{
		if(isSame(mpoPmwifNum, getMpoPmwifNum()))return;
		String oldValue = getMpoPmwifNum();
		this.mpoPmwifNum=mpoPmwifNum;
		setProperty("MPO_PMWIF_NUM", mpoPmwifNum, oldValue);
	}
	@Column(name="SPI_PMWIF_ASSIGNED_DIR",nullable=true,length=1)
	public boolean isSpiPmwifAssignedDir(){
		return spiPmwifAssignedDir;
	}
	public void setSpiPmwifAssignedDir(boolean spiPmwifAssignedDir) throws java.sql.SQLException{
		if(isSame(spiPmwifAssignedDir, isSpiPmwifAssignedDir()))return;
		boolean oldValue = isSpiPmwifAssignedDir();
		this.spiPmwifAssignedDir=spiPmwifAssignedDir;
		setProperty("SPI_PMWIF_ASSIGNED_DIR", spiPmwifAssignedDir, oldValue);
	}
	@Column(name="MPO_PMWIF_ASSIGNED_M3",nullable=true,length=1)
	public boolean isMpoPmwifAssignedM3(){
		return mpoPmwifAssignedM3;
	}
	public void setMpoPmwifAssignedM3(boolean mpoPmwifAssignedM3) throws java.sql.SQLException{
		if(isSame(mpoPmwifAssignedM3, isMpoPmwifAssignedM3()))return;
		boolean oldValue = isMpoPmwifAssignedM3();
		this.mpoPmwifAssignedM3=mpoPmwifAssignedM3;
		setProperty("MPO_PMWIF_ASSIGNED_M3", mpoPmwifAssignedM3, oldValue);
	}
	@Column(name="MPO_PMWIF_ASSIGNED_PM",nullable=true,length=1)
	public boolean isMpoPmwifAssignedPm(){
		return mpoPmwifAssignedPm;
	}
	public void setMpoPmwifAssignedPm(boolean mpoPmwifAssignedPm) throws java.sql.SQLException{
		if(isSame(mpoPmwifAssignedPm, isMpoPmwifAssignedPm()))return;
		boolean oldValue = isMpoPmwifAssignedPm();
		this.mpoPmwifAssignedPm=mpoPmwifAssignedPm;
		setProperty("MPO_PMWIF_ASSIGNED_PM", mpoPmwifAssignedPm, oldValue);
	}
	@Column(name="MPO_PUBLISHED_OPERATING_DATE",nullable=true,length=7)
	public Calendar getMpoPublishedOperatingDate(){
		return mpoPublishedOperatingDate;
	}
	public void setMpoPublishedOperatingDate(Calendar mpoPublishedOperatingDate) throws java.sql.SQLException{
		if(isSame(mpoPublishedOperatingDate, getMpoPublishedOperatingDate()))return;
		Calendar oldValue = getMpoPublishedOperatingDate();
		this.mpoPublishedOperatingDate=mpoPublishedOperatingDate;
		setProperty("MPO_PUBLISHED_OPERATING_DATE", mpoPublishedOperatingDate, oldValue);
	}
	@Column(name="MPO_DB_MGR_NOTE",nullable=true,length=2048)
	public String getMpoDbMgrNote(){
		return mpoDbMgrNote;
	}
	public void setMpoDbMgrNote(String mpoDbMgrNote) throws java.sql.SQLException{
		if(isSame(mpoDbMgrNote, getMpoDbMgrNote()))return;
		String oldValue = getMpoDbMgrNote();
		this.mpoDbMgrNote=mpoDbMgrNote;
		setProperty("MPO_DB_MGR_NOTE", mpoDbMgrNote, oldValue);
	}
	@Column(name="GO131D_STATUS",nullable=true,length=9)
	public int getGo131DStatus(){
		return go131DStatus;
	}
	public void setGo131DStatus(int go131DStatus) throws java.sql.SQLException{
		if(isSame(go131DStatus, getGo131DStatus()))return;
		int oldValue = getGo131DStatus();
		this.go131DStatus=go131DStatus;
		setProperty("GO131D_STATUS", go131DStatus, oldValue);
		lookUp=null;
	}
	@Column(name="MPO_EPEF_COMMENT",nullable=true,length=2048)
	public String getMpoEpefComment(){
		return mpoEpefComment;
	}
	public void setMpoEpefComment(String mpoEpefComment) throws java.sql.SQLException{
		if(isSame(mpoEpefComment, getMpoEpefComment()))return;
		String oldValue = getMpoEpefComment();
		this.mpoEpefComment=mpoEpefComment;
		setProperty("MPO_EPEF_COMMENT", mpoEpefComment, oldValue);
	}
	@Column(name="ARRA",nullable=true,length=1)
	public boolean isArra(){
		return arra;
	}
	public void setArra(boolean arra) throws java.sql.SQLException{
		if(isSame(arra, isArra()))return;
		boolean oldValue = isArra();
		this.arra=arra;
		setProperty("ARRA", arra, oldValue);
	}
	@Column(name="REF_LIST_ID",nullable=true,length=9)
	public int getRefListId(){
		return refListId;
	}
	public void setRefListId(int refListId) throws java.sql.SQLException{
		if(isSame(refListId, getRefListId()))return;
		int oldValue = getRefListId();
		this.refListId=refListId;
		setProperty("REF_LIST_ID", refListId, oldValue);
		refList=null;
	}
	@Column(name="PROJ_LIST_SEQ",nullable=true,length=9)
	public int getProjListSeq(){
		return projListSeq;
	}
	public void setProjListSeq(int projListSeq) throws java.sql.SQLException{
		if(isSame(projListSeq, getProjListSeq()))return;
		int oldValue = getProjListSeq();
		this.projListSeq=projListSeq;
		setProperty("PROJ_LIST_SEQ", projListSeq, oldValue);
	}
	@Column(name="MPO_PROJ_REASON_LISTED",nullable=true,length=256)
	public String getMpoProjReasonListed(){
		return mpoProjReasonListed;
	}
	public void setMpoProjReasonListed(String mpoProjReasonListed) throws java.sql.SQLException{
		if(isSame(mpoProjReasonListed, getMpoProjReasonListed()))return;
		String oldValue = getMpoProjReasonListed();
		this.mpoProjReasonListed=mpoProjReasonListed;
		setProperty("MPO_PROJ_REASON_LISTED", mpoProjReasonListed, oldValue);
	}
	@Column(name="TSPOC_ANALYST_NOTES",nullable=true,length=2048)
	public String getTspocAnalystNotes(){
		return tspocAnalystNotes;
	}
	public void setTspocAnalystNotes(String tspocAnalystNotes) throws java.sql.SQLException{
		if(isSame(tspocAnalystNotes, getTspocAnalystNotes()))return;
		String oldValue = getTspocAnalystNotes();
		this.tspocAnalystNotes=tspocAnalystNotes;
		setProperty("TSPOC_ANALYST_NOTES", tspocAnalystNotes, oldValue);
	}
	public SceProjRev getSceProjRev()throws java.sql.SQLException{
		if(sceProjRev==null)
			sceProjRev=SceProjRev.getInstance(getSceProjRevId());
		return sceProjRev;
	}
	public void setSceProjRev(SceProjRev sceProjRev)throws java.sql.SQLException{
		setSceProjRevId(sceProjRev==null?0:sceProjRev.getSceProjRevId());
		this.sceProjRev=sceProjRev;
	}
	public User getMpoGroupLead()throws java.sql.SQLException{
		if(mpoGroupLead==null)
			mpoGroupLead=User.getInstance(getMpoGroupLeadId());
		return mpoGroupLead;
	}
	public void setMpoGroupLead(User mpoGroupLead)throws java.sql.SQLException{
		setMpoGroupLeadId(mpoGroupLead==null?0:mpoGroupLead.getUsernameId());
		this.mpoGroupLead=mpoGroupLead;
	}
	public User getMpoDevPm()throws java.sql.SQLException{
		if(mpoDevPm==null)
			mpoDevPm=User.getInstance(getMpoDevPmUserId());
		return mpoDevPm;
	}
	public void setMpoDevPm(User mpoDevPm)throws java.sql.SQLException{
		setMpoDevPmUserId(mpoDevPm==null?0:mpoDevPm.getUsernameId());
		this.mpoDevPm=mpoDevPm;
	}
	public User getMpoExecPm()throws java.sql.SQLException{
		if(mpoExecPm==null)
			mpoExecPm=User.getInstance(getMpoExecPmUserId());
		return mpoExecPm;
	}
	public void setMpoExecPm(User mpoExecPm)throws java.sql.SQLException{
		setMpoExecPmUserId(mpoExecPm==null?0:mpoExecPm.getUsernameId());
		this.mpoExecPm=mpoExecPm;
	}
	public User getMpoProjAnalyst()throws java.sql.SQLException{
		if(mpoProjAnalyst==null)
			mpoProjAnalyst=User.getInstance(getMpoProjAnalystUserId());
		return mpoProjAnalyst;
	}
	public void setMpoProjAnalyst(User mpoProjAnalyst)throws java.sql.SQLException{
		setMpoProjAnalystUserId(mpoProjAnalyst==null?0:mpoProjAnalyst.getUsernameId());
		this.mpoProjAnalyst=mpoProjAnalyst;
	}
	public User getMpoPceScheduler()throws java.sql.SQLException{
		if(mpoPceScheduler==null)
			mpoPceScheduler=User.getInstance(getMpoPceSchedulerUserId());
		return mpoPceScheduler;
	}
	public void setMpoPceScheduler(User mpoPceScheduler)throws java.sql.SQLException{
		setMpoPceSchedulerUserId(mpoPceScheduler==null?0:mpoPceScheduler.getUsernameId());
		this.mpoPceScheduler=mpoPceScheduler;
	}
	public User getMpoPceCost()throws java.sql.SQLException{
		if(mpoPceCost==null)
			mpoPceCost=User.getInstance(getMpoPceCostUserId());
		return mpoPceCost;
	}
	public void setMpoPceCost(User mpoPceCost)throws java.sql.SQLException{
		setMpoPceCostUserId(mpoPceCost==null?0:mpoPceCost.getUsernameId());
		this.mpoPceCost=mpoPceCost;
	}
	public LookUp getLookUp()throws java.sql.SQLException{
		if(lookUp==null)
			lookUp=LookUp.getInstance(getGo131DStatus());
		return lookUp;
	}
	public void setLookUp(LookUp lookUp)throws java.sql.SQLException{
		setGo131DStatus(lookUp==null?0:lookUp.getId());
		this.lookUp=lookUp;
	}
	public TspocRefList getRefList()throws java.sql.SQLException{
		if(refList==null)
			refList=TspocRefList.getInstance(getRefListId());
		return refList;
	}
	public void setRefList(TspocRefList refList)throws java.sql.SQLException{
		setRefListId(refList==null?0:refList.getId());
		this.refList=refList;
	}
	public Tspoc copy()throws java.sql.SQLException{
		Tspoc cp = new Tspoc((Tspoc)this);
		copyChildrenTo(cp);
		return cp;
	}
	public void copyChildrenTo(TspocDAO cp)throws java.sql.SQLException{
		super.copyChildrenTo(cp);
	}
	public Vector<String> getDifference(TspocDAO o){
		Vector<String> diffs = super.getDifference(o);
		if(!isSame(getId(),o.getId())) diffs.add("ID");
		if(!isSame(getSceProjRevId(),o.getSceProjRevId())) diffs.add("SCE_PROJ_REV_ID");
		if(!isSame(getMpoProjName(),o.getMpoProjName())) diffs.add("MPO_PROJ_NAME");
		if(!isSame(getMpoProjNamePrevious(),o.getMpoProjNamePrevious())) diffs.add("MPO_PROJ_NAME_PREVIOUS");
		if(!isSame(getMpoProjNameSce(),o.getMpoProjNameSce())) diffs.add("MPO_PROJ_NAME_SCE");
		if(!isSame(getMpoProjNameCust(),o.getMpoProjNameCust())) diffs.add("MPO_PROJ_NAME_CUST");
		if(!isSame(getMpoProjNameCustPrev(),o.getMpoProjNameCustPrev())) diffs.add("MPO_PROJ_NAME_CUST_PREV");
		if(!isSame(getMpoProjNameAssocProj(),o.getMpoProjNameAssocProj())) diffs.add("MPO_PROJ_NAME_ASSOC_PROJ");
		if(!isSame(getMpoProjSeg(),o.getMpoProjSeg())) diffs.add("MPO_PROJ_SEG");
		if(!isSame(getMpoFlagProjSysSplit(),o.getMpoFlagProjSysSplit())) diffs.add("MPO_FLAG_PROJ_SYS_SPLIT");
		if(!isSame(getMpoProjLocRegion(),o.getMpoProjLocRegion())) diffs.add("MPO_PROJ_LOC_REGION");
		if(!isSame(getMpoProjLocCity(),o.getMpoProjLocCity())) diffs.add("MPO_PROJ_LOC_CITY");
		if(!isSame(getMpoProjLocCounty(),o.getMpoProjLocCounty())) diffs.add("MPO_PROJ_LOC_COUNTY");
		if(!isSame(getMpoPublishedReportComment(),o.getMpoPublishedReportComment())) diffs.add("MPO_PUBLISHED_REPORT_COMMENT");
		if(!isSame(getMpoGroupLeadId(),o.getMpoGroupLeadId())) diffs.add("MPO_GROUP_LEAD_ID");
		if(!isSame(getMpoGroupLeadPaxNum(),o.getMpoGroupLeadPaxNum())) diffs.add("MPO_GROUP_LEAD_PAX_NUM");
		if(!isSame(getMpoDevPmUserId(),o.getMpoDevPmUserId())) diffs.add("MPO_DEV_PM_USER_ID");
		if(!isSame(getMpoDevPmPaxNum(),o.getMpoDevPmPaxNum())) diffs.add("MPO_DEV_PM_PAX_NUM");
		if(!isSame(getMpoExecPmUserId(),o.getMpoExecPmUserId())) diffs.add("MPO_EXEC_PM_USER_ID");
		if(!isSame(getMpoExecPmPaxNum(),o.getMpoExecPmPaxNum())) diffs.add("MPO_EXEC_PM_PAX_NUM");
		if(!isSame(getMpoProjAnalystUserId(),o.getMpoProjAnalystUserId())) diffs.add("MPO_PROJ_ANALYST_USER_ID");
		if(!isSame(getMpoProjAnalystPaxNum(),o.getMpoProjAnalystPaxNum())) diffs.add("MPO_PROJ_ANALYST_PAX_NUM");
		if(!isSame(getMpoPceSchedulerUserId(),o.getMpoPceSchedulerUserId())) diffs.add("MPO_PCE_SCHEDULER_USER_ID");
		if(!isSame(getMpoPceSchedulerPaxNum(),o.getMpoPceSchedulerPaxNum())) diffs.add("MPO_PCE_SCHEDULER_PAX_NUM");
		if(!isSame(getMpoPceCostUserId(),o.getMpoPceCostUserId())) diffs.add("MPO_PCE_COST_USER_ID");
		if(!isSame(getMpoPceCostPaxNum(),o.getMpoPceCostPaxNum())) diffs.add("MPO_PCE_COST_PAX_NUM");
		if(!isSame(getMpoPmwifNum(),o.getMpoPmwifNum())) diffs.add("MPO_PMWIF_NUM");
		if(!isSame(isSpiPmwifAssignedDir(),o.isSpiPmwifAssignedDir())) diffs.add("SPI_PMWIF_ASSIGNED_DIR");
		if(!isSame(isMpoPmwifAssignedM3(),o.isMpoPmwifAssignedM3())) diffs.add("MPO_PMWIF_ASSIGNED_M3");
		if(!isSame(isMpoPmwifAssignedPm(),o.isMpoPmwifAssignedPm())) diffs.add("MPO_PMWIF_ASSIGNED_PM");
		if(!isSame(getMpoPublishedOperatingDate(),o.getMpoPublishedOperatingDate())) diffs.add("MPO_PUBLISHED_OPERATING_DATE");
		if(!isSame(getMpoDbMgrNote(),o.getMpoDbMgrNote())) diffs.add("MPO_DB_MGR_NOTE");
		if(!isSame(getGo131DStatus(),o.getGo131DStatus())) diffs.add("GO131D_STATUS");
		if(!isSame(getMpoEpefComment(),o.getMpoEpefComment())) diffs.add("MPO_EPEF_COMMENT");
		if(!isSame(isArra(),o.isArra())) diffs.add("ARRA");
		if(!isSame(getRefListId(),o.getRefListId())) diffs.add("REF_LIST_ID");
		if(!isSame(getProjListSeq(),o.getProjListSeq())) diffs.add("PROJ_LIST_SEQ");
		if(!isSame(getMpoProjReasonListed(),o.getMpoProjReasonListed())) diffs.add("MPO_PROJ_REASON_LISTED");
		if(!isSame(getTspocAnalystNotes(),o.getTspocAnalystNotes())) diffs.add("TSPOC_ANALYST_NOTES");
		return diffs;
	}
	public void insertChildren()throws java.sql.SQLException{
	}
}
