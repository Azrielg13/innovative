package com.sce.esp.object.model;
import java.sql.SQLException;

import com.sce.esp.object.dao.CktTieDAO;

import javax.persistence.Entity;
import javax.persistence.NamedNativeQueries;
import javax.persistence.NamedNativeQuery;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
@Entity
@Table(schema="MDI",name="MDI252_CKT_TIE")
@NamedQueries({
	@NamedQuery(name = "findByID", query="SELECT o FROM CktTie o WHERE o.PLANYEAR=?1 AND o.ID=?2"),//AUTO-GENERATED
	@NamedQuery(name = "findAll", query="SELECT o FROM CktTie o"),//AUTO-GENERATED
	@NamedQuery(name = "findAllActive", query="SELECT o FROM CktTie o WHERE o.DELETED_TS IS NULL"),//AUTO-GENERATED
	@NamedQuery(name = "findByCkt", query="SELECT o FROM CktTie o WHERE o.PLANYEAR=?1 AND o.FROM_CKT_ID=?2 AND o.DELETED_TS IS NULL"),//AUTO-GENERATED
	@NamedQuery(name = "findByCkt2", query="SELECT o FROM CktTie o WHERE o.PLANYEAR=?1 AND o.TO_CKT_ID=?2 AND o.DELETED_TS IS NULL"),//AUTO-GENERATED
})
@NamedNativeQueries({
	@NamedNativeQuery(name = "refresh", query="SELECT o.* FROM MDI252_CKT_TIE o WHERE o.PLANYEAR=? AND o.ID=?"),//AUTO-GENERATED
})
public class CktTie extends CktTieDAO{
	
	private Ckt ckt;
	private Ckt ckt2;
	
	public CktTie(){
	}
	public CktTie(int planyear, int id){
		super(planyear, id);
	}
	public CktTie(CktTie orig){
		super(orig);
	}
	
	public Ckt getFromCkt() throws SQLException {
		return getCkt();
	}

	public Ckt getToCkt() throws SQLException {
		return getCkt2();
	}
	
	public Double getMaxTransfer() throws SQLException {
		return this.getToMaxXfr();
	}	
	public Double getReverseMaxTransfer() throws SQLException {
		return this.getFromMaxXfr();
	}	
	
	public Ckt getCkt()throws java.sql.SQLException{
		if(ckt==null)
			ckt=Ckt.getInstance(getPlanyear(), getFromCktId());
		return ckt;
	}
	public void setCkt(Ckt ckt)throws java.sql.SQLException{
		setFromCktId(ckt==null?0:ckt.getCktId());
		this.ckt=ckt;
	}
	public Ckt getCkt2()throws java.sql.SQLException{
		if(ckt2==null)
			ckt2=Ckt.getInstance(getPlanyear(), getToCktId());
		return ckt2;
	}
	public void setCkt2(Ckt ckt2)throws java.sql.SQLException{
		setToCktId(ckt2==null?0:ckt2.getCktId());
		this.ckt2=ckt2;
	}

	public double getMaxTransfer(Sub thisSub) throws SQLException{
		if(getFromCkt().getBbank() != thisSub)
			return getMaxTransfer();	//XXX TO max transfer
		else
			return getFromMaxXfr();	
	}

	public double getReverseMaxTransfer(Sub thisSub)throws SQLException{
		if(getFromCkt().getBbank() != thisSub)
			return getFromMaxXfr();	//XXX TO max transfer
		else
			return getMaxTransfer();	
	}
	
	public void setMaxTransfer(Sub thisSub, double num) throws SQLException{
		if(getFromCkt().getBbank() != thisSub)
			setToMaxXfr(num);	//XXX TO max transfer
		else
			setFromMaxXfr(num);	
	}

	public void setReverseMaxTransfer(Sub thisSub, double num)throws SQLException{
		if(getFromCkt().getBbank() != thisSub)
			setFromMaxXfr(num);	//XXX TO max transfer
		else
			setToMaxXfr(num);	
	}
	
	@Override 
	public String toString() {
		try {
			return (getFromCkt().getName() + " - " + getToCkt().getName());
		} catch (SQLException e) {
			e.printStackTrace();
		}

		return null;
	}
}
