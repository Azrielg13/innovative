/**
 *           | Master Data Interface Version 2.0 |                       
 * 
 * Copyright (c) 2006, Southern California Edison, Inc.
 * 					   Distribution Staff Engineering Team. 					  
 * 	                   All rights reserved.
 * 
 * This software has been developed exclusively for internal usage.
 * Unauthorized use is prohibited.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 */
package com.sce.esp.object.model;
import java.io.Serializable;

import javax.persistence.Entity;
import javax.persistence.NamedNativeQueries;
import javax.persistence.NamedNativeQuery;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

import com.sce.esp.object.dao.CustDAO;
@Entity
@Table(schema="MDI",name="MDI920_CUST")
@NamedQueries({
	@NamedQuery(name = "findByID", query="SELECT o FROM Cust o WHERE o.PLANYEAR=?1 AND o.CUST_ID=?2"),//AUTO-GENERATED
	@NamedQuery(name = "findAll", query="SELECT o FROM Cust o"),//AUTO-GENERATED
	@NamedQuery(name = "findAllActive", query="SELECT o FROM Cust o WHERE o.DELETED_TS IS NULL"),//AUTO-GENERATED
	@NamedQuery(name = "findByBbank", query="SELECT o FROM Cust o WHERE o.PLANYEAR=?1 AND o.BBANK_SUB_ID=?2 AND o.DELETED_TS IS NULL"),//AUTO-GENERATED
	@NamedQuery(name = "findByCkt", query="SELECT o FROM Cust o WHERE o.PLANYEAR=?1 AND o.CKT_ID=?2 AND o.DELETED_TS IS NULL"),//AUTO-GENERATED
})
@NamedNativeQueries({
	@NamedNativeQuery(name = "refresh", query="SELECT o.* FROM MDI920_CUST o WHERE o.PLANYEAR=? AND o.CUST_ID=?"),//AUTO-GENERATED
})
public class Cust extends CustDAO implements Serializable{
	

	/**
	 * 
	 */
	private static final long serialVersionUID = -3186794840487049506L;

	/**
	 * The Constructor.
	 * 
	 * @param custId the cust id
	 * @param planyear the planyear
	 */
	public Cust(){
	}
	public Cust(int planyear, int custId){
		super(planyear,custId);
	}
	
	/**
	 * constructor for insert wizard.
	 * 
	 * @param planyear the planyear
	 */
	public Cust(int planyear) {
		super(planyear,0);
	}
	
	public Cust(Cust cust) {
		super(cust);
	}
	
	/**
	 * Returns the MVA Load = Sqrt(kw^2 + kvar^2)/1000.
	 * 
	 * @return the load
	 */
	public double getLoad(){
		return Math.sqrt(getKw()*getKw()+getKvar()*getKvar())/1000; 
	}
	
	/**
	 * To string.
	 * 
	 * @return the string
	 */
	public String toString() {
		return getName();
	}
	
	/**
	 * Gets the kva.
	 * 
	 * @return the kva
	 */
	public double getKva() {
		return Math.hypot(getKw(), getKvar());
	}
	
	/**
	 * Gets the var watt.
	 * 
	 * @return the var watt
	 */
	public double getVarWatt() {
		return getKw()==0?0:getKvar()/getKw();
	}
	
	/**
	 * Gets the power factor.
	 * 
	 * @return the power factor
	 */
	public double getPowerFactor() {
		return Math.cos(Math.atan(getVarWatt()));
	}

	public boolean isPAutomated() {
		return (getADp() != null && getBDp() != null && getCDp() != null);
	}

	public boolean isMwAutomated() {
		return getMwDp() != null;
	}

	public boolean isKvAutomated() {
		return getKvDp() != null;
	}

	public boolean isNAutomated() {
		return getNDp() != null;
	}
}
