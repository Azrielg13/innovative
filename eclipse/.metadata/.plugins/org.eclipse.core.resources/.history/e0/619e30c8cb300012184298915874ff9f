/* =============================================================
 * Southern California Edison: Master Database Interface V2.0
 * =============================================================
 *
 * (C) Copyright 2006, by Distribution Staff Engineering.
 *
 *
 *
 * Changes
 * --------------------------
 *
 *
 */

package com.sce.esp.dialog;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.GridLayout;
import java.awt.HeadlessException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.util.Calendar;
import java.util.Iterator;

import javax.swing.AbstractAction;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.SwingConstants;
import javax.swing.UIManager;
import javax.swing.border.BevelBorder;
import javax.swing.table.AbstractTableModel;

import com.jidesoft.dialog.BannerPanel;
import com.jidesoft.dialog.ButtonPanel;
import com.jidesoft.dialog.StandardDialog;
import com.jidesoft.swing.MultilineLabel;
import com.sce.esp.util.Calculate;
import com.sce.esp.util.ESPFont;

/**
 * <p>
 * AboutDialog:</br> About dialog box for the main application window.
 * </p>
 * 
 * @author Distribution Staff Engineering
 * @version 2.0
 */
public class ESPAboutDialog extends StandardDialog {

	/**
	 * 
	 */
	private static final long serialVersionUID = 8704750682431746583L;
	private String appName="";
	private String version="";
	private ImageIcon icon;

	public ESPAboutDialog(JFrame parent, String appName, String version, ImageIcon icon) throws HeadlessException {
		super(parent, "About");
		this.appName=appName;
		this.version=version;
		this.icon=icon;
		this.setResizable(false);
	}

	/**
	 * Creates the about box banner panel.
	 */
	public JComponent createBannerPanel() {
		BannerPanel headerPanel1 = new BannerPanel(
				appName,
				"Version "+version+"\n" +
				"©2002-"+Calculate.getCal().get(Calendar.YEAR)+" Southern California Edison.  Most Rights Reserved.",
				icon);
		headerPanel1.setFont(new ESPFont(11));
		headerPanel1.setBackground(Color.WHITE);
		headerPanel1.setBorder(BorderFactory
				.createBevelBorder(BevelBorder.LOWERED));
		return headerPanel1;
	}

	/**
	 * Creates the about box content panel.
	 */
	public JComponent createContentPanel() {
		JPanel contentPanel = new JPanel(new BorderLayout());
		JTabbedPane tabbedPane = new JTabbedPane();
		tabbedPane.setBorder(BorderFactory.createEmptyBorder());

		JPanel panel = new JPanel(new BorderLayout(10, 10));
		panel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));

		JPanel topPanel = new JPanel(new BorderLayout(6, 6));
		panel.add(topPanel, BorderLayout.BEFORE_FIRST_LINE);

		JTextArea textArea = new MultilineLabel();
		textArea.setColumns(40);
		textArea.setRows(21);
		textArea
		.setText("ESP Application Suite Software License Agreement\n\n"
				+

				"By installing the Software, the Licensee is indicating that the he/she/it "
				+ "has read and understands this Agreement and agrees to be bound by its "
				+ "terms and conditions. If this Agreement is unacceptable to the Licensee, "
				+ "the Licensee must remove and destroy any copies of this  Software in the "
				+ "Licensee's possession immediately.\n\n"
				+

				"1. LICENSE CONDITIONS\n"
				+

				"The Licensee acknowledges that Software furnished and utilized hereunder is for "
				+ "SCE - TDBU Personnel only and may not be reproduced or distributed by "
				+ "its users.  Because this application allows access to data that may "
				+ "be FERC Related Information (see following information) do not share this "
				+ "application package with other users.  Each user must obtain his own "
				+ "exclusive access to use this application.\n\n"
				+

				"2. FERC RELATED INFORMATION\n"
				+ "Some of the information contained in this database may be subject to provisions "
				+ "of FERC Standard of Conduct Order 717.  This site may contain Non-Public "
				+ "Transmission Function Information which  the FERC Standard of Conduct prohibits "
				+ "from being shared with Marketing Function Employees.  This information must not "
				+ "be communicated within SCE except in compliance with the FERC Standards of "
				+ "Conduct regulation.\n"
				+ "Please review the Overview of FERC Standards of Conduct from "
				+ "the link provided below: ");
		panel.add(new JScrollPane(textArea), BorderLayout.CENTER);
		tabbedPane.add("About", panel);

		String loc = "FERC Standards of Conduct Web Site";
		panel.add(new com.sce.esp.util.ui.HyperLinkLabel(loc,null,"https://portal.edisonintl.com/irj/portal?NavigationTarget=navurl://efd2cfab394092bbc8efac7d246c2d72"), BorderLayout.SOUTH);
		//
		//panel.add(new com.sce.esp.util.ui.HyperLinkLabel(loc,null,"https://portal.edisonintl.com/irj/go/km/docs/eix/RPA/My%20Company/Policies/FERC%20Standards%20of%20Conduct/FERC%20Standards%20of%20Conduct.html"), BorderLayout.SOUTH);

		tabbedPane.add("About", panel);

		JPanel propertiesPanel = new JPanel(new BorderLayout());
		JTable propertiesTable = new JTable(new PropertiesTableModel());

		JPanel consolePanel = new JPanel(new BorderLayout());
		JPanel topConsolePanel = new JPanel(new GridLayout(0,3,5,5));
		
		topConsolePanel.add(new JPanel());
		
		JButton test = new JButton("View Java Control Panel");
		test.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				String tester = "";
					tester=System.getProperty("sun.boot.library.path").toString();
				
				try {
					Runtime.getRuntime().exec(new String[]{ "rundll32", "url.dll,FileProtocolHandler", tester+"\\javacpl.exe" });
				} catch (IOException e1) {
					e1.printStackTrace();
				}
				
			}
		});
		
		topConsolePanel.add(test);
		topConsolePanel.add(new JPanel());
		

		propertiesTable.setColumnSelectionAllowed(false);
		propertiesTable.setRowSelectionAllowed(false);
		propertiesTable.getColumnModel().getColumn(0).setPreferredWidth(188);
		propertiesTable.getColumnModel().getColumn(1).setPreferredWidth(418);
		propertiesPanel.add(new JScrollPane(propertiesTable),
				BorderLayout.CENTER);
		tabbedPane.add("Properties", propertiesPanel);
		
//		final JTextArea textLogArea = new JTextArea(){
//			/**
//			 * 
//			 */
//			private static final long serialVersionUID = 585955508447033716L;
//
//			public String getText(){
//				return EspLogger.getLogStream();
//			}
//		};
//		textLogArea.setText(EspLogger.getLogStream());
//		textLogArea.setPreferredSize(new Dimension(400,400));
//		//textLogArea.setMaximumSize(new Dimension(400,400));
//		JideScrollPane js = new JideScrollPane(textLogArea);
//		js.setPreferredSize(new Dimension(400,400));
//	//	js.setMaximumSize(new Dimension(400,400));
//		
//		tabbedPane.add("Console", js );

		consolePanel.add(topConsolePanel, BorderLayout.NORTH);		

		contentPanel.add(tabbedPane, BorderLayout.CENTER);
		return contentPanel;
	}

	/**
	 * Creates the about box ok button panel.
	 */
	public ButtonPanel createButtonPanel() {
		ButtonPanel buttonPanel = new ButtonPanel(SwingConstants.CENTER);
		JButton okButton = new JButton();
		okButton.setName(OK);
		buttonPanel.addButton(okButton, ButtonPanel.AFFIRMATIVE_BUTTON);

		okButton.setAction(new AbstractAction(UIManager
				.getString("OptionPane.okButtonText")) {
			/**
					 * 
					 */
					private static final long serialVersionUID = 7903449231684416167L;

			public void actionPerformed(ActionEvent e) {
				setDialogResult(RESULT_AFFIRMED);
				setVisible(false);
				dispose();
			}
		});
		setDefaultAction(okButton.getAction());
		getRootPane().setDefaultButton(okButton);
		buttonPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
		return buttonPanel;
	}

	private class PropertiesTableModel extends AbstractTableModel {
		/**
		 * 
		 */
		private static final long serialVersionUID = 2247565810336061293L;

		public int getColumnCount() {
			return 2;
		}

		public String getColumnName(int index) {
			if (index == 0)
				return "Property";
			else if (index == 1)
				return "Value";
			return "ERROR";
		}

		public int getRowCount() {
			return System.getProperties().size();
		}

		@SuppressWarnings("unchecked")
		public Object getValueAt(int rowIndex, int colIndex) {
			Iterator iter = System.getProperties().keySet().iterator();
			int i = 0;
			while (iter.hasNext()) {
				Object key = iter.next();
				if (i == rowIndex) {
					if (colIndex == 0)
						return key;
					else
						return System.getProperties().getProperty(
								key.toString());
				}
				i++;
			}
			return "ERROR";
		}
	}
}