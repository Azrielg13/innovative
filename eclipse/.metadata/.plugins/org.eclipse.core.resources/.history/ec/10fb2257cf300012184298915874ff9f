package com.sce.esp.object.model;

import java.sql.SQLException;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Hashtable;

import com.sce.esp.log.EspLogger;
import com.sce.esp.object.ESPTestCase;
import com.sce.esp.util.Calculate;


public class PortfolioTest extends ESPTestCase {
	
//	public void testMakeVersion() throws SQLException{
//		//2012
//	Hashtable<String,SceProjElemCost> t = new Hashtable<String,SceProjElemCost>();
//	for(PortfolioGroup pg : Portfolio.getInstance(Portfolio.APPROVED_ID).getPortfolioGroups()) {
//		SceProjElemCost rev = pg.getSceProjElemCost();
//		if(t.get(rev.getHashKey())==null){
//			t.put(rev.getHashKey(), rev);
//		}
//	}
//	EspLogger.message(this, "tSize="+t.size());//172
//}
	
	public void makeVersion() throws SQLException{
	int c=0;
	int year = 2012;
	int id = year-2008;
	SceProjRev rev;
	for(Program p: Program.getAllActive()){
		for(SceProj proj : p.getSceProjs(null,SceProjRev.APPROVED, Simulation.getInstance(Department.getActivePlanYear(), 0))) {
			rev = proj.getCurRev(SceProjRev.APPROVED);
			HashMap<String, SceProjElemCostYear> specHashMap = new HashMap<String,SceProjElemCostYear>();

			for(SceProjElemCost spec : rev.getSceProjElemCosts(CostStage.Type.Forecast)){
				specHashMap.put(spec.getSapOrderNum(), spec.getSceProjElemCostYear(year));
			}
			for(SceProjElemCost spec : rev.getSceProjElemCosts()){
				if(spec.getCost(year) > 0 && spec.getCostStageId() != CostStage.FORECAST && spec.getCostStageId()!= CostStage.APPROVED && spec.isEnabled()){
					PortfolioGroup pg = PortfolioGroup.getInstance(id, spec.getCostId());
					if(pg==null){
						try{
						pg = new PortfolioGroup(id, spec.getCostId());
						pg.insert();
						c++;
						}catch(Exception e){
							e.printStackTrace();
						}
					}
				}
				
			}
			
		}

	}
}
	
//	public void testMakeVersion() throws SQLException{
//		Hashtable<String,SceProjRev> t = new Hashtable<String,SceProjRev>();
//		for(PortfolioGroup pg : Portfolio.getInstance(Portfolio.EMERGENT_ID).getPortfolioGroups()) {
//			SceProjRev rev = pg.getSceProjElemCost().getSceProjRev();
//			if(t.get(rev.getHashKey())==null){
//				t.put(rev.getHashKey(), rev);
//			}
//		}
//		EspLogger.message(this, "tSize="+t.size());//172
//	}
	
//	786
	public void testMakeVersion() throws SQLException{
		int c=0;
		for(SceProj proj : SceProj.getAllActive(null,SceProjRev.EMERGENT,Simulation.getInstance(Department.getActivePlanYear(),0))) {
			for(SceProjElemCost spec : proj.getCurRev(SceProjRev.EMERGENT).getSceProjElemCosts()){
				PortfolioGroup pg = PortfolioGroup.getInstance(Portfolio.EMERGENT_ID, spec.getCostId());
				if(pg==null){
					try{
					pg = new PortfolioGroup(Portfolio.EMERGENT_ID, spec.getCostId());
					pg.insert();
					c++;
					}catch(Exception e){
						e.printStackTrace();
					}
				}
			}
		}
		EspLogger.message(this, "c="+c);
	}
	
}
