package com.sce.esp.object.model;
import java.sql.SQLException;
import java.util.Calendar;

import com.sce.esp.object.dao.OverheadKeyDAO;
import com.sce.esp.util.Calculate;

import javax.persistence.Entity;
import javax.persistence.NamedNativeQueries;
import javax.persistence.NamedNativeQuery;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
@Entity
@Table(schema="MDI",name="MDIU72_OVERHEAD_KEY")
@NamedQueries({
	@NamedQuery(name = "findByID", query="SELECT o FROM OverheadKey o WHERE o.ID=?1"),//AUTO-GENERATED
	@NamedQuery(name = "findAll", query="SELECT o FROM OverheadKey o"),//AUTO-GENERATED
	@NamedQuery(name = "findAllActive", query="SELECT o FROM OverheadKey o WHERE o.DELETED_TS IS NULL"),//AUTO-GENERATED
})
@NamedNativeQueries({
	@NamedNativeQuery(name = "refresh", query="SELECT o.* FROM MDIU72_OVERHEAD_KEY o WHERE o.ID=?"),//AUTO-GENERATED
})
public class OverheadKey extends OverheadKeyDAO{
	@Override
	public String toString() {
		return getName();
	}
	public OverheadKey(){
	}
	public OverheadKey(int id){
		super(id);
	}
	public OverheadKey(OverheadKey orig){
		super(orig);
	}
	
//	public OverheadLoaderRate getOverheadLoaderRate( LookUp rateType, Calendar effDate) throws SQLException {
//		for(OverheadLoaderRate olr:OverheadLoaderRate.getCollection(new String[]{"LOADER_ID","O_H_KEY_ID"},getId(),rateType.getId()))
//			if(effDate==null || effDate.compareTo(olr.getEffDate())>=0)
//				return olr;
//		return null;
//	}
//	
//	public void setOverheadLoaderRate(LookUp rateType, Calendar effDate, double rate) throws SQLException {
//		getOverheadLoaderRate4Edit(rateType,effDate).setRate(rate);
//	}
//	
//	public Calendar getEffDate(LookUp rateType, Calendar effDate) throws SQLException{
//		OverheadLoaderRate olr = getOverheadLoaderRate(rateType, effDate);
//		if(olr!=null)
//			return olr.getEffDate();
//		return null;
//	}
//	
//	private OverheadLoaderRate getOverheadLoaderRate4Edit(LookUp rateType, Calendar effDate) throws SQLException {
//		OverheadLoaderRate olr = getOverheadLoaderRate( rateType,  effDate);
//		if(olr==null){
//			olr = new OverheadLoaderRate();
//			olr.setLoaderType(rateType);
//			olr.setEffDate(effDate);
//			addOverheadLoaderRate(olr);
//		}
//		else if(effDate.getTimeInMillis()-olr.getEffDate().getTimeInMillis()>Calculate.ONE_DAY){
//			olr = olr.copy();
//			olr.setEffDate(effDate);
//			addOverheadLoaderRate(olr);
//		}
//		return olr;
//	}
	
}
