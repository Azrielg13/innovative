/*
 * Copyright (c) 2002-2010 ESP Suite. All Rights Reserved.
 *
 *     
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, 
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; 
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE 
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, 
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 * 
 * Authors: Technology Integration Group, SCE
 * Developers: Eddie Mayfield, Frank Gonzales, Augustin Muniz,
 * Kate Suwan, Hiro Kushida, Andrew McNaughton, Brian Stonerock,
 * Russell Ragsdale, Patrick Ridge, Everett Aragon.
 * 
 */
package com.sce.esp.component;

import java.awt.Font;
import java.util.List;

import javax.swing.SwingConstants;

import com.jidesoft.grid.CellStyle;
import com.jidesoft.grid.HeaderStyleModel;
import com.jidesoft.grid.StyleModel;
import com.jidesoft.grid.TreeTableModel;

/**
 * <p>
 * MDITreeTableModel:</br> Creates an MDI Tree Table Model.
 * </p>
 * 
 * @author Distribution Staff Engineering
 * @version 2.0
 */
public class ESPTreeTableModel extends TreeTableModel implements StyleModel , HeaderStyleModel{

	/** The _col names. */
	private String colNames[];

	/** The cell style. */
	private static CellStyle cellStyle = new CellStyle();

	public ESPTreeTableModel() {
		super();
	}

	/**
	 * Creates a new instance of MDITreeTableModel.
	 * 
	 * @param list
	 *            A list containing all rows
	 * @param colnames
	 *            An array of strings
	 */
	public ESPTreeTableModel(List list, String[] colnames) {
		super(list);
		colNames = colnames;
	}

	/**
	 * Set column names.
	 * 
	 * @param names
	 *            String array column names
	 */
	public void setColumnNames(String[] names) {
		colNames = names;
	}

	/**
	 * Used to determine which column is going to be fixed.
	 * 
	 * @param columnIndex
	 *            the index of the column
	 * 
	 * @return column type
	 */
	public int getColumnType(int columnIndex) {
		return columnIndex < 1 ? HEADER_COLUMN : REGULAR_COLUMN;
	}

	/**
	 * Fetch column name.
	 * 
	 * @param column
	 *            index of column
	 * 
	 * @return name of column as string
	 */
	public String getColumnName(int column) {
		return colNames[column];
	}

	/**
	 * Number of columns.
	 * 
	 * @return columns count
	 */
	public int getColumnCount() {
		return colNames.length;
	}

	/**
	 * Checks if is cell span on.
	 * 
	 * @return true, if is cell span on
	 */
	public boolean isCellSpanOn() {
		return true;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see com.jidesoft.grid.StyleModel#getCellStyleAt(int, int)
	 */
	public CellStyle getCellStyleAt(int rowIndex, int columnIndex) {
		return cellStyle;
	}
	/*
	 * (non-Javadoc)
	 * 
	 * @see com.jidesoft.grid.StyleModel#isCellStyleOn()
	 */
	public boolean isCellStyleOn() {
		return true;
	}

	@Override
	public CellStyle getHeaderStyleAt(int rowIndex, int columnIndex) {
		if (columnIndex == 0) 
            return HEADER_STYLE;
         return CENTER_STYLE;
	}
//
	@Override
	public boolean isHeaderStyleOn() {
		return true;
	}
//	
		public static CellStyle HEADER_STYLE = new CellStyle();
		public static CellStyle CENTER_STYLE = new CellStyle();	
//		public static CellStyle ICON_STYLE = new CellStyle();
//		public static CellStyle GREEN_STYLE = new CellStyle();
//		public static CellStyle BLUE_STYLE = new CellStyle();
//	
	 static {
////		 CENTER_STYLE.setForeground(Color.gray);
         CENTER_STYLE.setHorizontalAlignment(SwingConstants.CENTER);
//         GREEN_STYLE.setForeground(new Color(0, 128, 0));
//         GREEN_STYLE.setHorizontalAlignment(SwingConstants.CENTER);
//         BLUE_STYLE.setForeground(Color.blue);
//         BLUE_STYLE.setHorizontalAlignment(SwingConstants.CENTER);
//         ICON_STYLE.setHorizontalAlignment(SwingConstants.CENTER);
//         ICON_STYLE.setIcon(IconsFactory.getImageIcon("icons/package.png"));
//         ICON_STYLE.setShowIconOnly(false);
//         ICON_STYLE.setFontStyle(Font.BOLD);
//         ICON_STYLE.setForeground(Color.blue);
         HEADER_STYLE.setFontStyle(Font.BOLD);
         HEADER_STYLE.setHorizontalAlignment(SwingConstants.CENTER);
     }
}