package com.sce.esp.object.model;

import javax.persistence.Entity;
import javax.persistence.NamedNativeQueries;
import javax.persistence.NamedNativeQuery;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

import com.sce.esp.object.dao.TestQuestionDAO;
@Entity
@Table(schema="MDI",name="MDI992_TEST_QUESTION")
@NamedQueries({
	@NamedQuery(name = "findByID", query="SELECT o FROM TestQuestion o WHERE o.SCRIPT_ID=?1 AND o.QUESTION_ID=?2"),//AUTO-GENERATED
	@NamedQuery(name = "findAll", query="SELECT o FROM TestQuestion o"),//AUTO-GENERATED
	@NamedQuery(name = "findAllActive", query="SELECT o FROM TestQuestion o WHERE o.DELETED_TS IS NULL"),//AUTO-GENERATED
	@NamedQuery(name = "findByTestScript", query="SELECT o FROM TestQuestion o WHERE o.SCRIPT_ID=?1 AND o.DELETED_TS IS NULL"),//AUTO-GENERATED
})
@NamedNativeQueries({
	@NamedNativeQuery(name = "refresh", query="SELECT o.* FROM MDI992_TEST_QUESTION o WHERE o.SCRIPT_ID=? AND o.QUESTION_ID=?"),//AUTO-GENERATED
})
public class TestQuestion extends TestQuestionDAO{

	public TestQuestion(){
		super(0,0);
	}
	public TestQuestion(int scriptId, int questionId){
		super(scriptId,questionId);
	}
	
	public TestQuestion(TestQuestion testQuestion) {
		super(testQuestion);
	}
	/**
	 * To string.
	 * 
	 * @return the string
	 */
	public String toString(){
		return ""+getQuestionId();
	}
	public int getPlanyear(){
    	return Department.getActivePlanYear();
    }
}
