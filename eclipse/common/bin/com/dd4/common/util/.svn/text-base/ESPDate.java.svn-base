/*
 * Copyright (c) 2002-2010 ESP Suite. All Rights Reserved.
 *
 *     
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" 
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, 
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR 
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; 
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE 
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, 
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 * 
 * Authors: Technology Integration Group, SCE
 * Developers: Eddie Mayfield, Frank Gonzales, Augustin Muniz,
 * Kate Suwan, Hiro Kushida, Andrew McNaughton, Brian Stonerock,
 * Russell Ragsdale, Patrick Ridge, Everett Aragon.
 * 
 */
package com.sce.esp.util;

import java.text.SimpleDateFormat;
import java.util.Calendar;

/**
 * 
 * @author Distribution Staff Engineering
 * @version 2.0
 */
public class ESPDate implements Comparable<Object>{
	protected Calendar cal;
	private SimpleDateFormat format;
	
	/**
	 * 
	 * @param cal
	 */
	public ESPDate(Calendar cal){
		this(cal,FormatText.USER_DOW_DATE);
	}
	public ESPDate(Calendar cal, SimpleDateFormat format){
		if(cal!=null)
			this.cal = (Calendar)cal.clone();
		this.format = format;
	}
	
	/**
	 * 
	 * @return
	 */
	public Calendar getCalendar(){
		return cal;
	}
	
	public String getTime(){
		return FormatText.formatDate(getCalendar(),FormatText.USER_DATE);
	}
	
	/**
	 * 
	 */
	public String toString(){
		return FormatText.formatDate(getCalendar(), format);
	}
	
	/**
	 * 
	 * @param o
	 * @return
	 */
	public int compareTo(Object o){
		if(o instanceof ESPDate){
			if(getCalendar() == null && ((ESPDate)o).getCalendar() != null)
				return -1;
			if(getCalendar() != null && ((ESPDate)o).getCalendar() == null)
				return 1;
			if(getCalendar() == null && ((ESPDate)o).getCalendar() == null)
				return 0;
			return getCalendar().compareTo(((ESPDate)o).getCalendar());
		}
		return toString().compareTo(o.toString());
	}
}
