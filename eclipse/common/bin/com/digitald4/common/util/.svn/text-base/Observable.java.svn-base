package com.sce.esp.util;

import java.util.Collections;
import java.util.HashSet;
import java.util.Set;

import com.sce.esp.object.dao.DataAccessObject;

public class Observable{
	
	/*Creating Observable Lists (option #2)
	The collections included in the default JDK are not observable, 
	which means that adding or removing elements from them does not 
	fire any events that would instruct Beans Binding to update the 
	bound targets. Fortunately, Beans Binding ships with an 
	ObservableCollections factory object that can create such events 
	from existing, regular collections:*/


//	ObservableList<Employee> employees = 
//	   ObservableCollections.observableList(
//	      new ArrayList<Employee>());

	private Set<Observer<DataAccessObject>> observers = 
		Collections.synchronizedSet(new HashSet<Observer<DataAccessObject>>());

	public void attach(Observer<DataAccessObject> observer) {
		if(observers.contains(observer))
			observers.remove(observer);
		observers.add(observer);
	}
	
	public void detach(Observer<DataAccessObject> observer) {
		observers.remove(observer);
	}

	protected void notify(DataAccessObject dao) {
		for (Observer<DataAccessObject> obs : observers) {
			obs.update(dao);
		}
	}
}
