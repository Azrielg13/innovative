CREATE TABLE general_data(
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	GROUP_ID INT,
	IN_GROUP_ID INT NOT NULL,
	NAME VARCHAR(64) NOT NULL,
	RANK DOUBLE,
	ACTIVE BOOLEAN DEFAULT 1,
	DESCRIPTION VARCHAR(256),
	DATA VARCHAR(128)
);

CREATE TABLE user(
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	TYPE_ID INT NOT NULL,
	EMAIL VARCHAR(64) NOT NULL,
	FIRST_NAME VARCHAR(20) NOT NULL,
	LAST_NAME VARCHAR(20) NOT NULL,
	DISABLED BOOLEAN,
	READ_ONLY BOOLEAN,
	PASSWORD VARCHAR(128),
	NOTES VARCHAR(256),
	LAST_LOGIN DATETIME
);

CREATE TABLE nurse(
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	REG_DATE DATE,
	ACTIVE BOOLEAN DEFAULT true,
	ADDRESS VARCHAR(50) NOT NULL,
	LATITUDE DOUBLE,
	LONGITUDE DOUBLE,
	PHONE_NUMBER VARCHAR(20),
	REFERRAL_SOURCE VARCHAR(100),
	PAY_RATE DOUBLE NOT NULL,
	PAY_RATE_2HR_SOC DOUBLE,
	PAY_RATE_2HR_ROC DOUBLE,
	MILEAGE_RATE DOUBLE
);

CREATE TABLE license(
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	NURSE_ID INT NOT NULL,
	LIC_TYPE_ID INT NOT NULL,
	NUMBER VARCHAR(32),
	VALID_DATE DATE,
	EXPIRATION_DATE DATE
);

CREATE TABLE vendor(
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	NAME VARCHAR(64) NOT NULL,
	ADDRESS VARCHAR(50),
	LATITUDE DOUBLE,
	LONGITUDE DOUBLE,
	PHONE_NUMBER VARCHAR(20),
	CONTACT_NAME VARCHAR(64),
	CONTACT_NUMBER VARCHAR(20),
	ACTIVE BOOLEAN DEFAULT 1,
	BILLING_RATE DOUBLE,
	BILLING_RATE_2HR_SOC DOUBLE,
	BILLING_RATE_2HR_ROC DOUBLE,
	BILLING_FLAT DOUBLE,
	BILLING_FLAT_2HR_SOC DOUBLE,
	BILLING_FLAT_2HR_ROC DOUBLE
);

CREATE TABLE patient(
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	REFERRAL_DATE DATE,
	REFERRAL_SOURCE_ID INT NOT NULL,
	NAME VARCHAR(64) NOT NULL,
	MR_NUM VARCHAR(16),
	DIANOSIS_ID INT,
	THERAPY_TYPE_ID INT,
	I_V_ACCESS_ID INT,
	START_OF_CARE BOOLEAN,
	START_OF_CARE_DATE DATE,
	SERVICE_ADDRESS VARCHAR(50),
	LATITUDE DOUBLE,
	LONGITUDE DOUBLE,
	BILLING_ID INT,
	RX VARCHAR(128),
	EST_LAST_DAY_OF_SERVICE DATE,
	LABS BOOLEAN,
	LABS_FREQUENCY VARCHAR(64),
	FIRST_RECERT_DUE DATE,
	D_C_DATE VARCHAR(64),
	INFO_IN_S_O_S BOOLEAN,
	SCHEDULING_PREFERENCE VARCHAR(64),
	REFERRAL_NOTE VARCHAR(1024),
	REFERRAL_RESOLUTION_ID INT,
	REFERRAL_RESOLUTION_DATE DATE,
	REFERRAL_RESOLUTION_NOTE VARCHAR(512),
	VENDOR_CONFIRMATION_DATE DATE,
	NURSE_CONFIRMATION_DATE DATE,
	PATIENT_CONFIRMATION_DATE DATE,
	MEDS_DELIVERY_DATE DATE,
	MEDS_CONFIRMATION_DATE DATE,
	ACTIVE BOOLEAN DEFAULT 1,
	DESCRIPTION VARCHAR(256)
);

CREATE TABLE appointment(
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	PATIENT_ID INT NOT NULL,
	NURSE_ID INT,
	START DATETIME NOT NULL,
	END DATETIME NOT NULL,
	CANCELLED BOOLEAN,
	TIME_IN DATETIME,
	TIME_OUT DATETIME,
	MILEAGE SMALLINT,
	ASSESSMENT_COMPLETE BOOLEAN,
	PAYMENT_DATE DATE
);

CREATE TABLE assessment_entry(
	ID INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	APPOINTMENT_ID INT NOT NULL,
	ASSESSMENT_ID INT NOT NULL,
	VALUE_ID INT,
	VALUE_STR VARCHAR(64),
	ACK BOOLEAN
);

--Paystub
CREATE TABLE paystub(
	ID INT NOT NULL AUTO_INCREMENT,
	NURSE_ID INT NOT NULL,
	STATUS_ID INT NOT NULL,
	NAME VARCHAR(64),
	PAY_DATE DATE NOT NULL,
	GENERATION_TIME DATETIME,
	LOGGED_HOURS DOUBLE,
	MILEAGE INT,
	PAY_MILEAGE DOUBLE,
	LOGGED_HOURS_Y_T_D DOUBLE,
	MILEAGE_Y_T_D INT,
	PAY_MILEAGE_Y_T_D DOUBLE,
	GROSS_PAY DOUBLE NOT NULL,
	PRE_TAX_DEDUCTION DOUBLE,
	TAXABLE DOUBLE,
	TAX_TOTAL DOUBLE,
	POST_TAX_DEDUCTION DOUBLE,
	NON_TAX_WAGES DOUBLE,
	NET_PAY DOUBLE,
	GROSS_PAY_Y_T_D DOUBLE,
	PRE_TAX_DEDUCTION_Y_T_D DOUBLE,
	TAXABLE_Y_T_D DOUBLE,
	TAX_TOTAL_Y_T_D DOUBLE,
	POST_TAX_DEDUCTION_Y_T_D DOUBLE,
	NON_TAX_WAGES_Y_T_D DOUBLE,
	NET_PAY_Y_T_D DOUBLE,
	COMMENT VARCHAR(1024),
	DATA BLOB,
	CONSTRAINT PK PRIMARY KEY (ID)
);
CREATE INDEX MDI.I_NURSEID ON MDI.paystub (NURSE_ID);
/

--Deduction
CREATE TABLE deduction(
	ID INT NOT NULL AUTO_INCREMENT,
	PAYSTUB_ID INT NOT NULL,
	TYPE_ID INT NOT NULL,
	FACTOR DOUBLE,
	AMOUNT DOUBLE,
	AMOUNT_Y_T_D DOUBLE,
	CONSTRAINT PK PRIMARY KEY (ID)
);
